<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    
    <title>The Blue Book</title>
    <description>My personal digital garden</description>
    <link>https://lyz-code.github.io/blue-book</link>
    <atom:link href="https://lyz-code.github.io/blue-book/monthly.xml" rel="self" type="application/rss+xml"/>

    
    <managingEditor>Lyz</managingEditor>

    
    <pubDate>2021-05-01 06:41:18+00:00</pubDate>
    <ttl>43200</ttl>

    
    <generator>mkdocs-newsletter - v0.3.0</generator>

    
    
    <image><url>https://lyz-code.github.io/blue-book/img/logo.bmp</url><title>The Blue Book</title>
      <link>https://lyz-code.github.io/blue-book</link>
    </image>
    

    
    
    <item><title>April of 2021</title>
      <author>Lyz</author>
      <description>&lt;article class=&#34;md-content__inner md-typeset&#34;&gt; &lt;a class=&#34;md-content__button md-icon&#34; href=&#34;https://github.com/lyz-code/blue-book/edit/master/docs/newsletter/2021_04.md&#34; title=&#34;Edit this page&#34;&gt; &lt;svg viewbox=&#34;0 0 24 24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M20.71 7.04c.39-.39.39-1.04 0-1.41l-2.34-2.34c-.37-.39-1.02-.39-1.41 0l-1.84 1.83 3.75 3.75M3 17.25V21h3.75L17.81 9.93l-3.75-3.75L3 17.25z&#34;&gt;&lt;/path&gt;&lt;/svg&gt; &lt;/a&gt;  &lt;h2 id=&#34;projects&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/projects/&#34;&gt;Projects&lt;/a&gt;&lt;/h2&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Improvement: Explain the updates on the repository-orm project.&lt;/p&gt; &lt;p&gt;In the latest version &lt;code&gt;0.2.0&lt;/code&gt;, we added:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Support for the &lt;a href=&#34;https://lyz-code.github.io/repository-orm/tinydb_repository/&#34;&gt;TinyDB repository&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;Support for regular expressions in the &lt;code&gt;search&lt;/code&gt; method.&lt;/li&gt; &lt;li&gt;Easier repository loading with &lt;code&gt;load_repository&lt;/code&gt; function.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Add a link to the meilisearch &lt;a href=&#34;https://blog.meilisearch.com/&#34;&gt;blog&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Create the quantified self project.&lt;/p&gt; &lt;p&gt;With links to the two starting points &lt;a href=&#34;https://beepb00p.xyz/hpi.html&#34;&gt;HPI&lt;/a&gt; and &lt;a href=&#34;https://github.com/bionic-dev/bionic&#34;&gt;bionic&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/projects/#automate-email-management&#34;&gt;Sketch how to automate repetitive tasks prompted by email events.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Most of the emails I receive require repetitive actions that can be automated, I&#39;ve stumbled upon &lt;a href=&#34;https://notmuchmail.org/&#34;&gt;notmuchmail&lt;/a&gt;, which looks very promising. A friend suggested to use &lt;a href=&#34;https://afew.readthedocs.io/en/latest/&#34;&gt;afew&lt;/a&gt; for tagging, and I&#39;d probably use &lt;a href=&#34;https://github.com/pazz/alot&#34;&gt;alot&lt;/a&gt; to interact with the system (and finally be able to use email from the cli).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/projects/#quantified-self&#34;&gt;Add interesting interface.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;For the interface &lt;a href=&#34;https://github.com/adri/memex&#34;&gt;adri&#39;s memex&lt;/a&gt; looks awesome! It&#39;s inspired in the Andrew Louis &lt;a href=&#34;https://www.youtube.com/watch?v=DFWxvQn4cf8&amp;amp;t=1616s&#34;&gt;talk Building a Memex&lt;/a&gt; whose &lt;a href=&#34;https://hyfen.net/memex/&#34;&gt;blog posts&lt;/a&gt; seems to be a gold mine.&lt;/p&gt; &lt;p&gt;Also look at &lt;a href=&#34;https://github.com/hpi/hpi&#34;&gt;hpi&#39;s compilation&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/projects/#improve-the-way-of-launching-applications-with-i3wm&#34;&gt;Sketch how to improve the launching of applications with i3wm.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;In the past I tried installing &lt;a href=&#34;https://github.com/davatorium/rofi&#34;&gt;rofi&lt;/a&gt; without success, I should try again. If the default features are not enough, check &lt;a href=&#34;https://github.com/adi1090x/rofi&#34;&gt;adi1090x&#39;s custom resources&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/projects/#repository-orm&#34;&gt;Show the changes of repository-orm 0.3.1.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;+* Add &lt;code&gt;first&lt;/code&gt; and &lt;code&gt;last&lt;/code&gt; methods to the repositories. +* Make entity &lt;code&gt;id_&lt;/code&gt; definition optional. +* add &lt;code&gt;_model_name&lt;/code&gt; attribute to entities.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: &lt;a href=&#34;projects.md#quantified-self&#34;&gt;Add [woop awesome quantified self](https://github.com/woop/awesome-quantified-self) resources to the research list.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;projects.md#migrate-software-bug-tracker-to-a-vendor-free-one&#34;&gt;Add project to migrate software bug tracker to a vendor free one like [git-bug](https://github.com/MichaelMure/git-bug).&lt;/a&gt;&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/projects/#improve-the-notification-management-in-linux&#34;&gt;Improve the notification management in Linux.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Create new seed project to be able to group and silence the notifications under a custom logic. For example:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;If I want to focus on a task, only show the most important ones.&lt;/li&gt; &lt;li&gt;Only show alerts once every X minutes. Or define that I want to receive them the first 10 minutes of every hour.&lt;/li&gt; &lt;li&gt;If I&#39;m not working, silence all work alerts.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/projects/#improve-the-hard-drive-monitor-system&#34;&gt;Improve the hard drive monitor system.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Create new seed project to use something like &lt;a href=&#34;https://github.com/AnalogJ/scrutiny&#34;&gt;scrutiny&lt;/a&gt; (there&#39;s a &lt;a href=&#34;https://docs.linuxserver.io/images/docker-scrutiny&#34;&gt;linuxserver image&lt;/a&gt;) to collect and display the information. For alerts, use one of their &lt;a href=&#34;https://github.com/AnalogJ/scrutiny#notifications&#34;&gt;supported providers&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/projects/#aggregate-all-notifications&#34;&gt;Aggregate all notifications.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Instead of reading the email, github, gitlab, discourse, reddit notifications, aggregate all in one place and show them to the user in a nice command line interface.&lt;/p&gt; &lt;p&gt;For the aggregator server, my first choice would be &lt;a href=&#34;https://gotify.net/&#34;&gt;gotify&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/projects/#faker-optional&#34;&gt;Add faker-optional to the dormant plant projects.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/projects/#other&#34;&gt;Add seedling project to create factoryboy factories from pydantic models automatically.&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;devops&#34;&gt;DevOps&lt;/h2&gt; &lt;h3 id=&#34;continuous-integration&#34;&gt;Continuous Integration&lt;/h3&gt; &lt;h4 id=&#34;flakehell&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/flakehell/&#34;&gt;Flakehell&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Correction: Update the git repository.&lt;/p&gt; &lt;p&gt;The existent repository has been archived in favor of &lt;a href=&#34;https://github.com/flakehell/flakehell&#34;&gt;this one&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Explain how to patch the extended_default_ignore error for versions &amp;gt; 3.9.0.&lt;/p&gt; &lt;p&gt;Add to your your &lt;code&gt;pyproject.toml&lt;/code&gt;:&lt;/p&gt;  &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;coding&#34;&gt;Coding&lt;/h2&gt; &lt;h3 id=&#34;python&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/python/&#34;&gt;Python&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Improvement: Add aiomultiprocess to the list of libraries to test.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/omnilib/aiomultiprocess&#34;&gt;aiomultiprocess&lt;/a&gt;: Presents a simple interface, while running a full AsyncIO event loop on each child process, enabling levels of concurrency never before seen in a Python application. Each child process can execute multiple coroutines at once, limited only by the workload and number of cores available.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/python/#how-to-write-good-documentation&#34;&gt;Add interesting links on how to write good documentation.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;I would like to refactor &lt;a href=&#34;https://documentation.divio.com/introduction/&#34;&gt;divio&#39;s&lt;/a&gt; and &lt;a href=&#34;https://v3.vuejs.org/guide/contributing/writing-guide.html#principles&#34;&gt;Vue&#39;s&lt;/a&gt; guidelines and apply it to my projects.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Add FastAPI docs as a model to study and follow.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add apprise to the interesting libraries to explore.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/caronc/apprise&#34;&gt;apprise&lt;/a&gt;: Allows you to send a notification to almost all of the most popular notification services available to us today such as: Linux, Telegram, Discord, Slack, Amazon SNS, Gotify, etc. Look at &lt;a href=&#34;https://github.com/caronc/apprise#supported-notifications&#34;&gt;all the supported notifications&lt;/a&gt; &lt;code&gt;(¬º-°)¬&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add kivi and kivimd to the interesting libraries to explore.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://kivy.org/&#34;&gt;kivi&lt;/a&gt; is used to create android/Linux/iOS/Windows applications with python. Use it with &lt;a href=&#34;https://github.com/kivymd/KivyMD&#34;&gt;kivimd&lt;/a&gt; to make it beautiful, check &lt;a href=&#34;https://github.com/HeaTTheatR/Articles&#34;&gt;the examples&lt;/a&gt; and the &lt;a href=&#34;https://kivymd.readthedocs.io/en/latest/&#34;&gt;docs&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;boto3&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/boto3/&#34;&gt;Boto3&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the AWS SDK library and explain how to test it.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://boto3.amazonaws.com/v1/documentation/api/latest/index.html&#34;&gt;Boto3&lt;/a&gt; is the AWS SDK for Python to create, configure, and manage AWS services, such as Amazon Elastic Compute Cloud (Amazon EC2) and Amazon Simple Storage Service (Amazon S3). The SDK provides an object-oriented API as well as low-level access to AWS services.&lt;/p&gt; &lt;p&gt;For &lt;a href=&#34;https://lyz-code.github.io/blue-book/boto3/#testing&#34;&gt;testing&lt;/a&gt;, try to use &lt;a href=&#34;boto3.md#moto&#34;&gt;moto&lt;/a&gt;, using the &lt;a href=&#34;https://botocore.amazonaws.com/v1/documentation/api/latest/reference/stubber.html&#34;&gt;Botocore&#39;s stubber&lt;/a&gt; as fallback option.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Explain how to test ec2, route53, s3, and rds resources.&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: Explain how to test vpc and auto scaling group resources.&lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Explain how to extract the instance when testing autoscaling groups.&lt;/p&gt; &lt;p&gt;Also track the &lt;a href=&#34;https://lyz-code.github.io/blue-book/boto3/#issues&#34;&gt;issue to add support to launch templates&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/boto3/#test-security-groups&#34;&gt;Explain how to test security groups.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: &lt;a href=&#34;https://lyz-code.github.io/blue-book/boto3/#test-route53&#34;&gt;Add note that pagination is not yet supported when testing route53.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;I&#39;ve &lt;a href=&#34;https://github.com/spulec/moto/issues/3879&#34;&gt;opened an issue&lt;/a&gt; to solve it.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;type-hints&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/type_hints/&#34;&gt;Type Hints&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Improvement: Explain how to ignore a linter error and a type error.&lt;/p&gt; &lt;p&gt;With &lt;code&gt;# type: ignore # noqa: W0212&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;logging&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/python_logging/&#34;&gt;Logging&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Explain how to log python program exceptions better than to a file.&lt;/p&gt; &lt;p&gt;Using &lt;code&gt;logging&lt;/code&gt; to write write exceptions and breadcrumbs to a file might not be the best solution because unless you look at it directly most errors will pass unnoticed.&lt;/p&gt; &lt;p&gt;To actively monitor and react to code exceptions use an application monitoring platform like &lt;a href=&#34;https://sentry.io/welcome/&#34;&gt;sentry&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;In the article I explain what are the advantages of using this solution and do a comparison between Sentry and &lt;a href=&#34;https://glitchtip.com&#34;&gt;GlitchTip&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;deepdiff&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/deepdiff/&#34;&gt;DeepDiff&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Improvement: Add warning that regular expressions are not yet supported.&lt;/p&gt; &lt;p&gt;Until &lt;a href=&#34;https://github.com/seperman/deepdiff/pull/239&#34;&gt;#239&lt;/a&gt; is merged, the official library doesn&#39;t support searching for regular expressions. You can use &lt;a href=&#34;https://github.com/lyz-code/deepdiff&#34;&gt;my fork&lt;/a&gt; instead.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Remove advice to use my fork instead.&lt;/p&gt; &lt;p&gt;The original one has already merged my &lt;a href=&#34;https://github.com/seperman/deepdiff/pull/239&#34;&gt;PR&lt;/a&gt; &lt;code&gt;＼\ ٩( ᐛ )و /／&lt;/code&gt;. Beware though as the &lt;code&gt;regexp&lt;/code&gt; are not enabled by default (against my will). You need to use the &lt;code&gt;use_regexp=True&lt;/code&gt; as an argument to &lt;code&gt;grep&lt;/code&gt; or &lt;code&gt;DeepSearch&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;factoryboy&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/factoryboy/&#34;&gt;FactoryBoy&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/factoryboy/#word-from-enum-choices&#34;&gt;Explain how to use &lt;code&gt;Enum&lt;/code&gt; with factoryboy.&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;faker&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/faker/&#34;&gt;Faker&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/faker/#create-optional-data&#34;&gt;Explain how to create &lt;code&gt;Optional&lt;/code&gt; data.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://lyz-code.github.io/faker-optional/&#34;&gt;&lt;code&gt;faker-optional&lt;/code&gt;&lt;/a&gt; is a custom faker provider that acts as a wrapper over other Faker providers to return their value or &lt;code&gt;None&lt;/code&gt;. Useful to create data of type &lt;code&gt;Optional[Any]&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;fastapi&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/python_plugin_system/&#34;&gt;FastAPI&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Add beets system as a first approach.&lt;/p&gt; &lt;p&gt;When building Python applications, it&#39;s good to develop the core of your program, and allow extension via plugins.&lt;/p&gt; &lt;p&gt;I still don&#39;t know how to do it, but &lt;a href=&#34;https://beets.readthedocs.io/en/stable/dev/plugins.html&#34;&gt;Beets plugin system&lt;/a&gt; looks awesome for a first start.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce FastAPI the pydantic friendly python framework to build APIs.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://fastapi.tiangolo.com/&#34;&gt;FastAPI&lt;/a&gt; is a modern, fast (high-performance), web framework for building APIs with Python 3.6+ based on standard Python type hints.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Sum up the basic documentation.&lt;/p&gt; &lt;p&gt;Explain how to:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#sending-data-to-the-server&#34;&gt;Sending data to the server&lt;/a&gt;: Through &lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#path-parameters&#34;&gt;path parameters&lt;/a&gt;, &lt;a href=&#34;fastapi.md#query-parameters&#34;&gt;query parameters&lt;/a&gt; and &lt;a href=&#34;fastapi.md#body-requests&#34;&gt;body requests&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#handling-errors&#34;&gt;Handle errors&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#updating-data&#34;&gt;Update data&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#openapi-configuration&#34;&gt;Configure OpenAPI&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#testing&#34;&gt;Test FastAPI applications&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;And add a lot of &lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#interesting-features-to-explore&#34;&gt;more interesting features&lt;/a&gt; I&#39;ve discovered.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#logging-to-sentry&#34;&gt;Explain how to log exceptions to sentry.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#sending-data-to-the-client&#34;&gt;Explain how to send raw data to the client.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;With the &lt;a href=&#34;https://fastapi.tiangolo.com/advanced/response-directly/#returning-a-custom-response&#34;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; object.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#configuration&#34;&gt;Explain how to configure the application.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/fastapi/#inject-testing-configuration&#34;&gt;Explain how to inject a testing configuration in the tests.&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;pytest&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pytest/&#34;&gt;Pytest&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pytest/#excluding-code-from-coverage&#34;&gt;Explain how to exclude code from the coverage report.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Add &lt;code&gt;# pragma: no cover&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pytest/#running-tests-in-parallel&#34;&gt;Explain how to run tests in parallel.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;pytest-xdist&lt;/code&gt; makes it possible to run the tests in parallel, useful when the test suit is large or when the tests are slow.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install pytest-xdist
pytest -n auto
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;python-snippets&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/&#34;&gt;Python Snippets&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#install-a-python-dependency-from-a-git-repository&#34;&gt;Explain how to install dependencies from git repositories.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;With &lt;a href=&#34;https://stackoverflow.com/questions/16584552/how-to-state-in-requirements-txt-a-direct-github-source&#34;&gt;pip you can&lt;/a&gt;:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install git+git://github.com/path/to/repository@master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;If you want &lt;a href=&#34;https://stackoverflow.com/questions/32688688/how-to-write-setup-py-to-include-a-git-repository-as-a-dependency/54794506#54794506&#34;&gt;to hard code it in your &lt;code&gt;setup.py&lt;/code&gt;&lt;/a&gt;, you need to:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;install_requires&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
  &lt;span class=&#34;s1&#34;&gt;&#39;some-pkg @ git+ssh://git@github.com/someorgname/pkg-repo-name@v1.1#egg=some-pkg&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Explain how to create PyPI valid packages with direct dependencies.&lt;/p&gt; &lt;p&gt;It looks like PyPI don&#39;t want pip to reach out to URLs outside their site when installing from PyPI. So you can&#39;t define the direct dependencies in the &lt;code&gt;install_requires&lt;/code&gt;. Instead you need to install them in a &lt;code&gt;PostInstall&lt;/code&gt; custom script. Ugly as hell.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#install-a-python-dependency-from-a-git-repository&#34;&gt;Add warning about the method to use direct dependencies.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Last time I used this solution, when I added the library on a &lt;code&gt;setup.py&lt;/code&gt; the direct dependencies weren&#39;t installed :S&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;networkx&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/networkx/&#34;&gt;NetworkX&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the python library.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://networkx.org/&#34;&gt;NetworkX&lt;/a&gt; is a Python package for the creation, manipulation, and study of the structure, dynamics, and functions of complex networks.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;pydantic&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pydantic/&#34;&gt;Pydantic&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;Improvement: Change parse_obj definition to find how to import pydantic models from dictionary.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pydantic/#set-private-attributes&#34;&gt;Explain how to use private attributes.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;With the &lt;a href=&#34;https://pydantic-docs.helpmanual.io/usage/models/#private-model-attributes&#34;&gt;&lt;code&gt;PrivateAttr&lt;/code&gt;&lt;/a&gt; object.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pydantic/#update-entity-attributes-with-a-dictionary&#34;&gt;Explain how to update entity attributes with a dictionary.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You can create a new object with the new data using the &lt;code&gt;update&lt;/code&gt; argument of the &lt;code&gt;copy&lt;/code&gt; entity method.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;rich&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/rich/&#34;&gt;rich&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the python cli builder library and it&#39;s progress bar.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/willmcgugan/rich&#34;&gt;Rich&lt;/a&gt; is a Python library for rich text and beautiful formatting in the terminal.&lt;/p&gt; &lt;p&gt;Check out the beautiful progress bar:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install rich
python -m rich.progress
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;ruamel-yaml&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/ruamel_yaml/&#34;&gt;Ruamel YAML&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Improvement: Suggest to use ruyaml instead of ruamel.yaml.&lt;/p&gt; &lt;p&gt;As it&#39;s maintained by the community and versioned with git.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;sqlite3&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/sqlite3/&#34;&gt;sqlite3&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/sqlite3/#regexp&#34;&gt;Explain how to implement the REGEXP operator with Python.&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;tinydb&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/tinydb/&#34;&gt;TinyDB&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/tinydb/#serializing-custom-data&#34;&gt;Explain how to serialize datetime objects.&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;sqlite&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/sqlite/&#34;&gt;SQLite&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/sqlite/#regexp&#34;&gt;Explain how to configure sqlite to be able to use the REGEXP operator.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;It&#39;s not enabled by default.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;operative-systems&#34;&gt;Operative Systems&lt;/h2&gt; &lt;h3 id=&#34;linux&#34;&gt;Linux&lt;/h3&gt; &lt;h4 id=&#34;beets&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/vim/vim_plugins/&#34;&gt;Beets&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Correction: Typo.&lt;/p&gt; &lt;p&gt;There was a missing comma in the list.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce Beets the music management library.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://beets.io/&#34;&gt;Beets&lt;/a&gt; is a music management library used to get your music collection right once and for all. It catalogs your collection, automatically improving its metadata as it goes using the MusicBrainz database. Then it provides a set of tools for manipulating and accessing your music.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;haproxy&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/haproxy/&#34;&gt;HAProxy&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Add interesting guidelines on &lt;a href=&#34;https://github.com/jvehent/haproxy-aws&#34;&gt;how to configure HAProxy in AWS&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;hushboard&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/husboard/&#34;&gt;Hushboard&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce Husboard.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://kryogenix.org/code/hushboard/&#34;&gt;Hushboard&lt;/a&gt; is an utility that mutes your microphone while you’re typing.&lt;/p&gt; &lt;p&gt;(Thanks &lt;a href=&#34;https://m0wer.github.io/memento/computer_science/gnu_linux/hushboard/&#34;&gt;M0wer&lt;/a&gt;!)&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;ffmpeg&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/ffmpeg/&#34;&gt;ffmpeg&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the program and multiple of it&#39;s uses.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://www.ffmpeg.org/&#34;&gt;ffmpeg&lt;/a&gt; is a complete, cross-platform solution to record, convert and stream audio and video.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;modipy&#34;&gt;&lt;a href=&#34;modipy.md&#34;&gt;Modipy&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the music server.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mopidy/mopidy&#34;&gt;Mopidy&lt;/a&gt; is an extensible music server written in Python, that plays perfectly with &lt;a href=&#34;https://lyz-code.github.io/blue-book/beets/&#34;&gt;beets&lt;/a&gt; and the MPD ecosystem.&lt;/p&gt; &lt;p&gt;The awesome documentation, being Python based, the extension system, JSON-RPC, and JavaScript APIs make Mopidy a perfect base for your projects.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;arts&#34;&gt;Arts&lt;/h2&gt; &lt;h3 id=&#34;writing&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/writing/writing/&#34;&gt;Writing&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/writing/writing/#im-good-or-im-well&#34;&gt;Explain when to use I&#39;m good or I&#39;m well.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Use I&#39;m well when referring to being ill, use I&#39;m good for the rest.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;grammar-and-orthography&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/writing/orthography/&#34;&gt;Grammar and Orthography&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Explain when to write won&#39;t or wont.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Won&#39;t is the correct way to contract will not.&lt;/li&gt; &lt;li&gt;Wont is a synonym of &#34;a habit&#34;. For example, &#34;He went for a morning jog, as was his wont&#34;.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;other&#34;&gt;Other&lt;/h2&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Correction: Broken links.&lt;/p&gt; &lt;p&gt;Removed the link to (everything_i_know.md) since it no longer exists. Updated some links that where broken due to a folder structure change.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Explain how to select a random choice from &lt;code&gt;Enum&lt;/code&gt; objects.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pydantic/&#34;&gt;pydantic&lt;/a&gt; uses &lt;code&gt;Enum&lt;/code&gt; objects to define &lt;a href=&#34;https://pydantic-docs.helpmanual.io/usage/types/#enums-and-choices&#34;&gt;the choices of fields&lt;/a&gt;, so we need them to create the factories of those objects.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Improve the periodic tasks and application metrics monitoring.&lt;/p&gt; &lt;p&gt;Setup an &lt;a href=&#34;https://healthchecks.io/&#34;&gt;healthchecks&lt;/a&gt; instance with the &lt;a href=&#34;https://docs.linuxserver.io/images/docker-healthchecks&#34;&gt;linuxserver image&lt;/a&gt; to monitor cronjobs.&lt;/p&gt; &lt;p&gt;For the notifications either use the &lt;a href=&#34;https://healthchecks.io/docs/configuring_prometheus/&#34;&gt;prometheus metrics&lt;/a&gt; or an &lt;a href=&#34;https://github.com/healthchecks/healthchecks/issues/271&#34;&gt;apprise&lt;/a&gt; compatible system.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;hr/&gt; &lt;div class=&#34;md-source-date&#34;&gt; &lt;small&gt; Last update: &lt;span class=&#34;git-revision-date-localized-plugin git-revision-date-localized-plugin-timeago&#34;&gt;&lt;span class=&#34;timeago&#34; datetime=&#34;2021-05-01T06:41:18+00:00&#34; locale=&#34;en&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;git-revision-date-localized-plugin git-revision-date-localized-plugin-iso_date&#34;&gt;2021-05-01&lt;/span&gt; &lt;/small&gt; &lt;/div&gt; &lt;/article&gt;</description>
      <link>https://lyz-code.github.io/blue-book/newsletter/2021_04/</link>
      <pubDate>2021-05-01 06:41:18+00:00</pubDate>
      <source url="https://lyz-code.github.io/blue-book/monthly.xml">The Blue Book</source>
      <guid isPermaLink="true">https://lyz-code.github.io/blue-book/newsletter/2021_04/</guid>
      
    </item>
    
    <item><title>March of 2021</title>
      <author>Lyz</author>
      <description>&lt;article class=&#34;md-content__inner md-typeset&#34;&gt; &lt;a class=&#34;md-content__button md-icon&#34; href=&#34;https://github.com/lyz-code/blue-book/edit/master/docs/newsletter/2021_03.md&#34; title=&#34;Edit this page&#34;&gt; &lt;svg viewbox=&#34;0 0 24 24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M20.71 7.04c.39-.39.39-1.04 0-1.41l-2.34-2.34c-.37-.39-1.02-.39-1.41 0l-1.84 1.83 3.75 3.75M3 17.25V21h3.75L17.81 9.93l-3.75-3.75L3 17.25z&#34;&gt;&lt;/path&gt;&lt;/svg&gt; &lt;/a&gt;  &lt;h2 id=&#34;introduction&#34;&gt;&lt;a href=&#34;../..&#34;&gt;Introduction&lt;/a&gt;&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;Reorganization: Merge the Meta article into the index.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;projects&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/projects/&#34;&gt;Projects&lt;/a&gt;&lt;/h2&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Improvement: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/projects/#mkdocs-newsletter&#34;&gt;Add mkdocs-newsletter as a dormant plant.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;MkDocs plugin to show the changes of documentation repositories in a user friendly format, at the same time that it&#39;s easy for the authors to maintain.&lt;/p&gt; &lt;p&gt;It creates daily, weekly, monthly and yearly newsletter articles with the changes of each period. Those pages, stored under the &lt;code&gt;Newsletters&lt;/code&gt; section, are filled with the changes extracted from the commit messages of the git history. The changes are grouped by categories, subcategories and then by file using the order of the site&#39;s navigation structure. RSS feeds are also created for each newsletter type, so it&#39;s easy for people to keep updated with the evolution of the site.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Reorganization: Update and reorganize projects.&lt;/p&gt; &lt;p&gt;Following the &lt;a href=&#34;https://lyz-code.github.io/blue-book/digital_garden/&#34;&gt;digital garden&lt;/a&gt; metaphor&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Reorganization: &lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/projects/#seeds&#34;&gt;Merge the wish_list article into the projects.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: Add seed to follow the updates of software.&lt;/li&gt; &lt;li&gt;New: Add seed to automatically update the dockers of maintained services.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;devops&#34;&gt;DevOps&lt;/h2&gt; &lt;h3 id=&#34;infrastructure-as-code&#34;&gt;Infrastructure as Code&lt;/h3&gt; &lt;h4 id=&#34;helm-git&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/helm_git/&#34;&gt;Helm Git&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Correction: Suggest version 0.8.0 until issue is solved.&lt;/p&gt; &lt;p&gt;Newer versions have a &lt;a href=&#34;https://github.com/aslafy-z/helm-git/issues/131&#34;&gt;bug&lt;/a&gt; that makes impossible to use helm_git with a repository that contains just one chart in the root of the git repository.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;monitoring&#34;&gt;Monitoring&lt;/h3&gt; &lt;h4 id=&#34;prometheus-install&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/prometheus/prometheus_installation/&#34;&gt;Prometheus Install&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Correction: Add warning that helm 2 support is dropped.&lt;/p&gt; &lt;p&gt;If you want to use the helm chart above 11.1.7 you need to use helm 3.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/prometheus/prometheus_installation/#upgrading-notes&#34;&gt;Add upgrading notes from 10.x -&amp;gt; 11.1.7.&lt;/a&gt;&lt;/p&gt;  &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;scrum&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/scrum/&#34;&gt;Scrum&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the scrum framework.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Scrum_%28software_development%29&#34;&gt;Scrum&lt;/a&gt; is an &lt;a href=&#34;https://en.wikipedia.org/wiki/Agile_software_development&#34;&gt;agile&lt;/a&gt; framework for developing, delivering, and sustaining complex products, with an initial emphasis on software development, although it has been used in other fields such as personal task management. It is designed for teams of ten or fewer members, who break their work into goals that can be completed within time-boxed iterations, called sprints, no longer than one month and most commonly two weeks. The Scrum Team track progress in 15-minute time-boxed daily meetings, called daily scrums. At the end of the sprint, the team holds sprint review, to demonstrate the work done, a sprint retrospective to improve continuously, and a sprint planning to prepare next sprint&#39;s tasks.&lt;/p&gt; &lt;p&gt;In the article I explain:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;I use to do &lt;a href=&#34;https://lyz-code.github.io/blue-book/scrum/#the-meetings&#34;&gt;the meetings&lt;/a&gt;: &lt;a href=&#34;scrum.md#daily-meetings&#34;&gt;Daily&lt;/a&gt;, &lt;a href=&#34;scrum.md#refinement-meetings&#34;&gt;Refinement&lt;/a&gt;, &lt;a href=&#34;scrum.md#retro-meetings&#34;&gt;Retros&lt;/a&gt;, &lt;a href=&#34;scrum.md#review-meetings&#34;&gt;Reviews&lt;/a&gt; and &lt;a href=&#34;scrum.md#planning-meetings&#34;&gt;Plannings&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;The relevant &lt;a href=&#34;https://lyz-code.github.io/blue-book/scrum/#the-roles&#34;&gt;roles&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;Some &lt;a href=&#34;https://lyz-code.github.io/blue-book/scrum/#definitions&#34;&gt;definitions&lt;/a&gt;, such as definition of done and definition of ready.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;coding&#34;&gt;Coding&lt;/h2&gt; &lt;h3 id=&#34;python&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/python/&#34;&gt;Python&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Add python landing page.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;code-styling&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_code_styling/&#34;&gt;Code Styling&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Improvement: Don&#39;t use try-except to initialize dictionaries.&lt;/p&gt; &lt;p&gt;Instead of:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;dictionary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;key&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;KeyError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;dictionary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;key&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;p&gt;Use:&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;n&#34;&gt;dictionary&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;setdefault&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;key&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;python-snippets&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/&#34;&gt;Python Snippets&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Add date management snippets.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#get-the-week-number-of-a-datetime&#34;&gt;Get the week number of a datetime&lt;/a&gt;: &lt;code&gt;datetime.datetime(2010, 6, 16).isocalendar()[1]&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#get-the-monday-of-a-week-number&#34;&gt;Get the Monday of a week number&lt;/a&gt;:&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;datetime&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;2013-W26&#34;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strptime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;-1&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&#34;%Y-W%W-%w&#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#get-the-month-name-from-a-number&#34;&gt;Get the month name from a number&lt;/a&gt;:&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;calendar&lt;/span&gt;

&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;calendar&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;month_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;s1&#34;&gt;&#39;March&#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; * &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#get-ordinal-from-number&#34;&gt;Get ordinal from number&lt;/a&gt;&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;int_to_ordinal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;number&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;sd&#34;&gt;&#39;&#39;&#39;Convert an integer into its ordinal representation.&lt;/span&gt;

&lt;span class=&#34;sd&#34;&gt;    make_ordinal(0)   =&amp;gt; &#39;0th&#39;&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;    make_ordinal(3)   =&amp;gt; &#39;3rd&#39;&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;    make_ordinal(122) =&amp;gt; &#39;122nd&#39;&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;    make_ordinal(213) =&amp;gt; &#39;213th&#39;&lt;/span&gt;

&lt;span class=&#34;sd&#34;&gt;    Args:&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;        number: Number to convert&lt;/span&gt;

&lt;span class=&#34;sd&#34;&gt;    Returns:&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;        ordinal representation of the number&lt;/span&gt;
&lt;span class=&#34;sd&#34;&gt;    &#39;&#39;&#39;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;suffix&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&#39;th&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;st&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;nd&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;rd&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;th&#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;number&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;number&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;suffix&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&#39;th&#39;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;number&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;suffix&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add file management snippets.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#remove-the-extension-of-a-file&#34;&gt;Remove the extension of a file&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#iterate-over-the-files-of-a-directory&#34;&gt;Iterate over the files of a directory&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#create-directory&#34;&gt;Create directory&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#touch-a-file&#34;&gt;Touch a file&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#get-the-first-day-of-next-month&#34;&gt;Get the first day of next month.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#check-directories-and-files&#34;&gt;Explain how to test directories and files.&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;pydantic&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pydantic/&#34;&gt;Pydantic&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Correction: How to solve the No name &#39;BaseModel&#39; in module &#39;pydantic&#39;.&lt;/p&gt; &lt;p&gt;It&#39;s still a patch, so I&#39;ve also monitored the relevant &lt;a href=&#34;https://lyz-code.github.io/blue-book/issues/#pydantic-errors&#34;&gt;issues&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;javascript&#34;&gt;Javascript&lt;/h3&gt; &lt;h4 id=&#34;mermaidjs&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/mermaidjs/&#34;&gt;MermaidJS&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the diagram library and how to make flowchart diagrams.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://mermaid-js.github.io&#34;&gt;MermaidJS&lt;/a&gt; is a Javascript library that lets you create diagrams using text and code.&lt;/p&gt; &lt;p&gt;It can render the &lt;a href=&#34;https://mermaid-js.github.io/mermaid/#/?id=diagrams-that-mermaid-can-render&#34;&gt;next diagram types&lt;/a&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Flowchart&lt;/li&gt; &lt;li&gt;Sequence.&lt;/li&gt; &lt;li&gt;Gantt&lt;/li&gt; &lt;li&gt;Class&lt;/li&gt; &lt;li&gt;Git graph&lt;/li&gt; &lt;li&gt;Entity Relationship&lt;/li&gt; &lt;li&gt;User journey&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;issues&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/issues/&#34;&gt;Issues&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;Improvement: Track python dependency errors.&lt;/li&gt; &lt;li&gt;Correction: Gitdb has updated smmap.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Jellyfin 10.7.1 broke the login page.&lt;/p&gt; &lt;p&gt;Don&#39;t upgrade till it&#39;s solved, as the rollback is not easy.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Jellyfin login page problem after upgrade to 10.7.X is solved.&lt;/p&gt; &lt;p&gt;Surprisingly the instructions in &lt;a href=&#34;https://github.com/jellyfin/jellyfin/issues/5489&#34;&gt;#5489&lt;/a&gt; solved it.&lt;/p&gt; &lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;systemctl stop jellyfin.service
mv /var/lib/jellyfin/data/jellyfin.db&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;,.bak&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
systemctl start jellyfin.service

&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; Go to JF URL, get asked to log &lt;span class=&#34;k&#34;&gt;in&lt;/span&gt; even though there are no Users &lt;span class=&#34;k&#34;&gt;in&lt;/span&gt; the JF DB now&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;

systemctl stop jellyfin.service
mv /var/lib/jellyfin/data/jellyfin.db&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;.bak,&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
systemctl start jellyfin.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;software-architecture&#34;&gt;Software Architecture&lt;/h2&gt; &lt;h3 id=&#34;architecture-decision-record&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/adr/&#34;&gt;Architecture Decision Record&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Improvement: Explain how to show relationship between ADRs.&lt;/p&gt; &lt;p&gt;Suggest a &lt;a href=&#34;https://lyz-code.github.io/blue-book/mermaidjs/&#34;&gt;mermaidjs&lt;/a&gt; diagram to show the state of the project ADRs.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;life-management&#34;&gt;Life Management&lt;/h2&gt; &lt;h3 id=&#34;automation&#34;&gt;Automation&lt;/h3&gt; &lt;h4 id=&#34;life-automation&#34;&gt;&lt;a href=&#34;life_automation.md&#34;&gt;Life Automation&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Suggest organize to act on computer file changes.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://organize.readthedocs.io/en/latest/&#34;&gt;organize&lt;/a&gt; looks good for automating processes on files. Maybe it&#39;s interesting to run it with &lt;a href=&#34;https://askubuntu.com/a/819290&#34;&gt;inotifywait&lt;/a&gt; instead of with a &lt;a href=&#34;https://github.com/tfeldmann/organize/issues/18&#34;&gt;cron job&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;fitness-tracker&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/fitness_band/&#34;&gt;Fitness Tracker&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Improvement: Discovery of wasp-os and Colmi P8.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/daniel-thompson/wasp-os&#34;&gt;wasp-os&lt;/a&gt; is an open source firmware for smart watches that are based on the nRF52 family of microcontrollers. Fully supported by &lt;a href=&#34;https://lyz-code.github.io/blue-book/gadgetbridge/&#34;&gt;gadgetbridge&lt;/a&gt;, Wasp-os features full heart rate monitoring and step counting support together with multiple clock faces, a stopwatch, an alarm clock, a countdown timer, a calculator and lots of other games and utilities. All of this, and still with access to the MicroPython REPL for interactive tweaking, development and testing.&lt;/p&gt; &lt;p&gt;One of the supported devices, the &lt;a href=&#34;https://wasp-os.readthedocs.io/en/latest/install.html#colmi-p8&#34;&gt;Colmi P8&lt;/a&gt;, looks really good.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;health&#34;&gt;Health&lt;/h2&gt; &lt;h3 id=&#34;sleep&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/sleep/&#34;&gt;Sleep&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/sleep/#the-sleep-cycle&#34;&gt;Explain the sleep cycle.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Humans cycle through two types of sleep in a regular pattern throughout the night with a period of 90 minutes. They were called non-rapid eye movement (NREM) and rapid eye movement (REM).&lt;/p&gt; &lt;p&gt;I answer the questions:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;What is the period of the REM/NREM cycle?&lt;/li&gt; &lt;li&gt;What happens to your body in REM and NREM phases?&lt;/li&gt; &lt;li&gt;How does the ratio of REM/NREM changes throughout the night? with a possible explanation.&lt;/li&gt; &lt;li&gt;Why sleeping 6 hours can make you loose up to 90% of your REM or NREM phases?&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/sleep/#sleeping-time-and-sense-distortions&#34;&gt;Explain sleeping time and sense distortions.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Answer the questions:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Why time feels longer in our dreams?&lt;/li&gt; &lt;li&gt;How do we loose awareness of the outside world when sleeping?&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;activism&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/diversity/&#34;&gt;Activism&lt;/a&gt;&lt;/h2&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Define Diversity, Equity and Inclusion.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;em&gt;Diversity&lt;/em&gt; is the representation and acknowledgement of the multitudes of identities, experiences, and ways of moving through the world. This includes—but is not limited to—ability, age, citizenship status, criminal record and/or incarceration, educational attainment, ethnicity, gender, geographical location, language, nationality, political affiliation, religion, race, sexuality, socioeconomic status, and veteran status. Further, we recognize that each individual&#39;s experience is informed by intersections across multiple identities.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;em&gt;Equity&lt;/em&gt; seeks to ensure respect and equal opportunity for all, using all resources and tools to elevate the voices of under-represented and/or disadvantaged groups.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;em&gt;Inclusion&lt;/em&gt; is fostering an environment in which people of all identities are welcome, valued, and supported. An inclusive organization solicits, listens to, learns from, and acts on the contributions of all its stakeholders.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;operative-systems&#34;&gt;Operative Systems&lt;/h2&gt; &lt;h3 id=&#34;linux&#34;&gt;Linux&lt;/h3&gt; &lt;h4 id=&#34;activitywatch&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/activitywatch/&#34;&gt;ActivityWatch&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce ActivityWatch tracking software.&lt;/p&gt; &lt;p&gt;It&#39;s a web application that can be installed both in Linux and Android that automatically tracks where you spend the time on.&lt;/p&gt; &lt;p&gt;Super interesting for life logging and automating stuff. Until I save some time to react on the data, I&#39;ll just gather it and see how to aggregate it.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Add week insights.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/ActivityWatch/aw-watcher-web/issues/20&#34;&gt;The browser watcher is not very accurate&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;The vim editor watcher doesn&#39;t add &lt;a href=&#34;https://github.com/ActivityWatch/aw-watcher-vim/issues/19&#34;&gt;git branch information&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;Syncing data between devices &lt;a href=&#34;https://github.com/ActivityWatch/activitywatch/issues/35&#34;&gt;is not yet supported&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;tabs-vs-buffers&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/vim_tabs/&#34;&gt;Tabs vs Buffers&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to use tabs, buffers and windows in vim.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;vim-plugins&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/vim/vim_plugins/&#34;&gt;Vim Plugins&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/vim/vim_plugins/#issues&#34;&gt;Follow the issue to add elipsis instead of ... in vim-abolish.&lt;/a&gt;&lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Forget to use abolish to insert the elipsis symbol.&lt;/p&gt; &lt;p&gt;Tpope said that it&#39;s not going to happen.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce vim-easymotion.&lt;/p&gt; &lt;p&gt;EasyMotion provides a much simpler way to use some motions in vim. It takes the &lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt; out of &lt;code&gt;&amp;lt;number&amp;gt;w&lt;/code&gt; or &lt;code&gt;&amp;lt;number&amp;gt;f{char}&lt;/code&gt; by highlighting all possible choices and allowing you to press one key to jump directly to the target.&lt;/p&gt; &lt;p&gt;When one of the available motions is triggered, all visible text preceding or following the cursor is faded, and motion targets are highlighted.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Reorganization: Move vim-test to the plugins page.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;elasticsearch&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/elasticsearch/&#34;&gt;elasticsearch&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to reindex an index.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;mkdocs&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/mkdocs/&#34;&gt;mkdocs&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Document the Navigation object and the on_nav event.&lt;/p&gt; &lt;p&gt;Useful if you develop MkDocs plugins, it holds the information to build the navigation of the site.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Describe navigation objects used in plugins.&lt;/p&gt; &lt;p&gt;Explain how to use the &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/mkdocs/#page&#34;&gt;Page&lt;/a&gt;, &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/mkdocs/#section&#34;&gt;Section&lt;/a&gt;, and &lt;a href=&#34;mkdocs.md#sectionpage&#34;&gt;SectionPage&lt;/a&gt; objects.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: You need to edit the nav in the on_nav and not in the on_files event.&lt;/p&gt; &lt;p&gt;Even though it seems more easy to create the nav structure in the &lt;a href=&#34;#on_files&#34;&gt;&lt;code&gt;on_files&lt;/code&gt;&lt;/a&gt; event, by editing the &lt;code&gt;nav&lt;/code&gt; dictionary of the &lt;code&gt;config&lt;/code&gt; object, there is no way of returning the &lt;code&gt;config&lt;/code&gt; object in that event, so we&#39;re forced to do it in this event.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/mkdocs/#adding-new-files&#34;&gt;Explain how to add files through a plugin.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Long story short, use the &lt;code&gt;on_config&lt;/code&gt; event instead of &lt;code&gt;on_files&lt;/code&gt; and &lt;code&gt;on_nav&lt;/code&gt; if you need to add files and want to change the navigation menu.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Explain how to use MermaidJS diagrams.&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: Explain how to test mkdocs plugins.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/mkdocs/#material-theme-customizations&#34;&gt;Explain additions of version 7.1.0 of the material theme.&lt;/a&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/mkdocs/#color-palette-toggle&#34;&gt;Dark-light mode switch&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/mkdocs/#back-to-top-button&#34;&gt;Back to top button&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;peek&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/peek/&#34;&gt;Peek&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce Peek the screen recorder.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/phw/peek&#34;&gt;Peek&lt;/a&gt; is a simple animated GIF screen recorder with an easy to use interface.&lt;/p&gt; &lt;p&gt;If you try to use it with i3, you&#39;re going to have a bad time, you&#39;d &lt;a href=&#34;https://github.com/phw/peek#on-i3-the-recording-area-is-all-black-how-can-i-record-anything&#34;&gt;need to install&lt;/a&gt; &lt;a href=&#34;https://github.com/chjj/compton&#34;&gt;Compton&lt;/a&gt;, and then the elements &lt;a href=&#34;https://github.com/phw/peek#why-cant-i-interact-with-the-ui-elements-inside-the-recording-area&#34;&gt;may not even be clickable&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;syncthing&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/syncthing/&#34;&gt;Syncthing&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Improvement: Mention privacy configurations.&lt;/p&gt; &lt;p&gt;Disable the &lt;a href=&#34;https://docs.syncthing.net/users/security.html#global-discovery&#34;&gt;Global Discovery&lt;/a&gt; and &lt;a href=&#34;https://docs.syncthing.net/users/security.html#relay-connections&#34;&gt;Relaying connections&lt;/a&gt; options.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;vim&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/vim/&#34;&gt;Vim&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Add vim landing page.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;android&#34;&gt;Android&lt;/h3&gt; &lt;h4 id=&#34;signal&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/signal/&#34;&gt;Signal&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce the messaging app and how to decrypt the backups.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;arts&#34;&gt;Arts&lt;/h2&gt; &lt;h3 id=&#34;writing&#34;&gt;Writing&lt;/h3&gt; &lt;h4 id=&#34;grammar-and-orthography&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/writing/orthography/&#34;&gt;Grammar and Orthography&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;Improvement: Expand the introduction and add Dave&#39;s suggested link.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/writing/orthography/#where-to-add-your-pronouns&#34;&gt;Explain where to add your pronouns.&lt;/a&gt;&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Hi, I’m Lyz (he/him), I&#39;m writing to tell you…&lt;/p&gt; &lt;/blockquote&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/writing/orthography/#when-to-capitalize-after-a-question-mark&#34;&gt;Explain when to capitalize after a question mark.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If the sentence ends after the question mark you should capitalize, if it doesn&#39;t end, you shouldn&#39;t have used the question mark, since it ends a sentence.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add textstat tests.&lt;/p&gt; &lt;p&gt;To analyze the text readability&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/writing/orthography/#how-to-use-the-singular-they&#34;&gt;Explain how to use the singular &lt;code&gt;they&lt;/code&gt;.&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;writing-style&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/writing_style/&#34;&gt;Writing Style&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/writing_style/#writing-style-books&#34;&gt;Analyze interesting books on writing style.&lt;/a&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The elements of style by William Strunk Jr and E.B White&lt;/li&gt; &lt;li&gt;On writing well by William Zinsser&lt;/li&gt; &lt;li&gt;Bird by bird by Anne Lamott&lt;/li&gt; &lt;li&gt;On writing by Stephen King&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/writing_style/#how-to-end-a-letter&#34;&gt;Explain how to end a letter.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Use Sincerely in doubt and Best if you have more confidence. Add a comma after the sign-off and &lt;em&gt;never&lt;/em&gt; use Cheers (it&#39;s what I&#39;ve been doing all my life &lt;code&gt;(◞‸◟；)&lt;/code&gt; ).&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;origami&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/origami/&#34;&gt;Origami&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Add mark1626 digital garden article on origamis.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;other&#34;&gt;Other&lt;/h2&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce Outrun.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Overv/outrun&#34;&gt;Outrun&lt;/a&gt; lets you execute a local command using the processing power of another Linux machine.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Introduce the media system and monitor interesting issues.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://jellyfin.org/&#34;&gt;Jellyfin&lt;/a&gt; is a Free Software Media System that puts you in control of managing and streaming your media. It is an alternative to the proprietary Emby and Plex, to provide media from a dedicated server to end-user devices via multiple apps. Jellyfin is descended from Emby&#39;s 3.5.2 release and ported to the .NET Core framework to enable full cross-platform support. There are no strings attached, no premium licenses or features, and no hidden agendas: just a team who want to build something better and work together to achieve it.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;hr/&gt; &lt;div class=&#34;md-source-date&#34;&gt; &lt;small&gt; Last update: &lt;span class=&#34;git-revision-date-localized-plugin git-revision-date-localized-plugin-timeago&#34;&gt;&lt;span class=&#34;timeago&#34; datetime=&#34;2021-04-01T08:41:38+00:00&#34; locale=&#34;en&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;git-revision-date-localized-plugin git-revision-date-localized-plugin-iso_date&#34;&gt;2021-04-01&lt;/span&gt; &lt;/small&gt; &lt;/div&gt; &lt;/article&gt;</description>
      <link>https://lyz-code.github.io/blue-book/newsletter/2021_03/</link>
      <pubDate>2021-04-01 08:41:38+00:00</pubDate>
      <source url="https://lyz-code.github.io/blue-book/monthly.xml">The Blue Book</source>
      <guid isPermaLink="true">https://lyz-code.github.io/blue-book/newsletter/2021_03/</guid>
      
    </item>
    
    <item><title>February of 2021</title>
      <author>Lyz</author>
      <description>&lt;article class=&#34;md-content__inner md-typeset&#34;&gt; &lt;a class=&#34;md-content__button md-icon&#34; href=&#34;https://github.com/lyz-code/blue-book/edit/master/docs/newsletter/2021_02.md&#34; title=&#34;Edit this page&#34;&gt; &lt;svg viewbox=&#34;0 0 24 24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M20.71 7.04c.39-.39.39-1.04 0-1.41l-2.34-2.34c-.37-.39-1.02-.39-1.41 0l-1.84 1.83 3.75 3.75M3 17.25V21h3.75L17.81 9.93l-3.75-3.75L3 17.25z&#34;&gt;&lt;/path&gt;&lt;/svg&gt; &lt;/a&gt;  &lt;h2 id=&#34;introduction&#34;&gt;&lt;a href=&#34;../..&#34;&gt;Introduction&lt;/a&gt;&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;New: Simplify the landing page text.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;meta&#34;&gt;Meta&lt;/h2&gt; &lt;h3 id=&#34;wish-list&#34;&gt;&lt;a href=&#34;wish_list.md&#34;&gt;Wish list&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Feature mkdocs-rss-plugin as a solution of publishing mkdocs updates as an RSS.&lt;/li&gt; &lt;li&gt;New: Add a git issue tracker and markdown formatter.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;devops&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/devops/&#34;&gt;DevOps&lt;/a&gt;&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;New: Comment on the DevOps pitfalls and update the learn path.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;monitoring&#34;&gt;Monitoring&lt;/h3&gt; &lt;h4 id=&#34;monitoring-comparison&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/monitoring_comparison/&#34;&gt;Monitoring Comparison&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Compare Nagios and Prometheus as monitoring.&lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Improve the comparison.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;State that nagios is not easy to configure. If you&#39;re used to it it is, otherwise it&#39;s not.&lt;/li&gt; &lt;li&gt;Add that grafana has a huge community building graphs.&lt;/li&gt; &lt;li&gt;Mention Thanos as the long term storage solution for Prometheus.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Add the insights of a nagios power user.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Update open source and community analysis with nagios exchange.&lt;/li&gt; &lt;li&gt;Correct nagios community analysis with its trajectory&lt;/li&gt; &lt;li&gt;Correct the analysis of the high availability of nagios&lt;/li&gt; &lt;li&gt;Add the option to host the script exporter in a dedicated server&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;coding&#34;&gt;Coding&lt;/h2&gt; &lt;h3 id=&#34;python&#34;&gt;Python&lt;/h3&gt; &lt;h4 id=&#34;gitpython&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/gitpython/&#34;&gt;GitPython&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the python library.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://gitpython.readthedocs.io&#34;&gt;GitPython&lt;/a&gt; is a python library used to interact with git repositories, high-level like git-porcelain, or low-level like git-plumbing.&lt;/p&gt; &lt;p&gt;It provides abstractions of git objects for easy access of repository data, and additionally allows you to access the git repository more directly using either a pure python implementation, or the faster, but more resource intensive git command implementation.&lt;/p&gt; &lt;p&gt;Explain how to:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Initialize or load repositories.&lt;/li&gt; &lt;li&gt;Make commits.&lt;/li&gt; &lt;li&gt;Interact with the history.&lt;/li&gt; &lt;li&gt;Test applications that use it.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Explain how to get the working directory of a repo.&lt;/p&gt; &lt;p&gt;Using the &lt;code&gt;working_dir&lt;/code&gt; attribute.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;jinja2&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/python_jinja2/&#34;&gt;Jinja2&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Explain how to use Jinja2.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://jinja.palletsprojects.com&#34;&gt;Jinja2&lt;/a&gt; is a modern and designer- friendly templating language for Python, modelled after Django’s templates. It is fast, widely used and secure with the optional sandboxed template execution environment.&lt;/p&gt; &lt;p&gt;Add installation, usage and basic and advanced template guidelines.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;python-snippets&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/&#34;&gt;Python Snippets&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Add today&#39;s learned python tricks.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#get-systems-timezone-and-use-it-in-datetime&#34;&gt;Get system&#39;s timezone and use it in datetime&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#capitalize-a-sentence&#34;&gt;Capitalize a sentence&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/#get-the-last-monday-datetime&#34;&gt;Get the last monday datetime&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;Explain how to group a list of dictionaries by a specific key.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;With &lt;code&gt;itertools.groupby&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;issues&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/issues/&#34;&gt;Issues&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the issue tracking document.&lt;/p&gt; &lt;p&gt;I haven&#39;t found a tool to monitor the context it made me track certain software issues, so I get lost when updates come. Until a tool shows up, I&#39;ll use the good old markdown to keep track of them.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add today&#39;s issues.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Gadgetbridge improvements&lt;/li&gt; &lt;li&gt;Ombi improvements&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Monitor today&#39;s issues.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Mkdocs migration to 7.x is giving errors with the search bar and repo stats.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;software-architecture&#34;&gt;Software Architecture&lt;/h2&gt; &lt;h3 id=&#34;architecture-decision-record&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/adr/&#34;&gt;Architecture Decision Record&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Introduce the Architecture Decision Records.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/joelparkerhenderson/architecture_decision_record&#34;&gt;ADR&lt;/a&gt; are short text documents that captures an important architectural decision made along with its context and consequences.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: &lt;a href=&#34;https://lyz-code.github.io/blue-book/adr/#adr-template&#34;&gt;Update the ADR template with the week learnings.&lt;/a&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Add the Proposals and Date sections&lt;/li&gt; &lt;li&gt;Explain the possible Status states.&lt;/li&gt; &lt;li&gt;Add an &lt;a href=&#34;https://github.com/SirVer/ultisnips&#34;&gt;Ultisnip&lt;/a&gt; vim snippet.&lt;/li&gt; &lt;li&gt;Explain how I&#39;ve used it to create &lt;a href=&#34;https://github.com/lyz-code/mkdocs-newsletter&#34;&gt;mkdocs- newsletter&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;life-management&#34;&gt;Life Management&lt;/h2&gt; &lt;h3 id=&#34;automation&#34;&gt;Automation&lt;/h3&gt; &lt;h4 id=&#34;amazfit-band-5&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/amazfit_band_5/&#34;&gt;Amazfit Band 5&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Add insights on sleep detection.&lt;/p&gt; &lt;p&gt;The sleep tracking using Gadgetbridge is not &lt;a href=&#34;https://codeberg.org/Freeyourgadget/Gadgetbridge/wiki/Huami-Deep-Sleep-
Detection&#34;&gt;good at all&lt;/a&gt;. After two nights, the band has not been able to detect when I woke in the middle of the night, or when I really woke up, as I usually stay in the bed for a time before standing up. I&#39;ll try with the proprietary application soon and compare results.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Explain how to upgrade the firmware.&lt;/p&gt; &lt;p&gt;Gadgetbridge people have a &lt;a href=&#34;https://codeberg.org/Freeyourgadget/Gadgetbridge/wiki/Amazfit-
Band-5-Firmware-Update&#34;&gt;guide on how to upgrade the firmware&lt;/a&gt;, you need to get the firmware from the &lt;a href=&#34;https://geekdoing.com/threads/amazfit-band-5-original-firmwares-
resources-fonts.2331/&#34;&gt;geek doing forum&lt;/a&gt; though, so it is interesting to create an account and watch the post.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Add insights on sleep tracking.&lt;/p&gt; &lt;p&gt;You can&#39;t use the Withings sleep analyzer without their app (as expected), maybe the &lt;a href=&#34;https://github.com/karlicoss/HPI/blob/master/my/emfit/__init__.py&#34;&gt;Emfit QS&lt;/a&gt; is the way to go.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;fitness-tracker&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/fitness_band/&#34;&gt;Fitness Tracker&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the fitness band in your life automation.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Activity_tracker&#34;&gt;Fitness tracker&lt;/a&gt; or activity trackers are devices or applications for monitoring and tracking fitness- related metrics such as distance walked or run, calorie consumption, and in some cases heartbeat. It is a type of wearable computer.&lt;/p&gt; &lt;p&gt;Explain also why it&#39;s interesting&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;virtual-assistant&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/virtual_assistant/&#34;&gt;Virtual Assistant&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce project with kalliope.&lt;/li&gt; &lt;li&gt;New: Explain the Speech-To-Text open source solutions.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;health&#34;&gt;Health&lt;/h2&gt; &lt;h3 id=&#34;teeth&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/teeth/&#34;&gt;Teeth&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Explain how to take care of your teeth.&lt;/p&gt; &lt;p&gt;A full guide on why should you take care of your teeth, the description on how the basic oral diseases work, why and how to brush your teeth, floss and usage of mouthwash&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Recommend a regular clean instead of a deep clean.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;deep-cleaning&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/teeth_deep_cleaning/&#34;&gt;Deep cleaning&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Explain what a deep cleaning is and when should you do it.&lt;/p&gt; &lt;p&gt;Analyze the reasons why would you need to do this procedure, how it works, when you need to do it, side effects and scientific evidences of it&#39;s effectiveness.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;activism&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/anonymous_feedback/&#34;&gt;Activism&lt;/a&gt;&lt;/h2&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the anonymous feedback tool to improve diversity, equity and inclusion in an organization.&lt;/p&gt; &lt;p&gt;Anonymous Feedback is a communication tool where people share feedback to teammates or other organizational members while protecting their identities.&lt;/p&gt; &lt;p&gt;Until the safe space is built where direct feedback is viable, anonymous feedback gives these employees a mechanism to raise their concerns, practice their feedback-giving skills, test the waters, and understand how people perceive their constructive (and sometimes critical) opinions, thus building the needed trust.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;operative-systems&#34;&gt;Operative Systems&lt;/h2&gt; &lt;h3 id=&#34;linux&#34;&gt;Linux&lt;/h3&gt; &lt;h4 id=&#34;mkdocs&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/mkdocs/&#34;&gt;mkdocs&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to develop your own plugins.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;vim&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/vim/&#34;&gt;Vim&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Configure Vim to set the upstream by default when git pushing.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;android&#34;&gt;Android&lt;/h3&gt; &lt;h4 id=&#34;gadgetbridge&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/gadgetbridge/&#34;&gt;GadgetBridge&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Add more guidelines to reverse engineer the band protocol.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;arts&#34;&gt;Arts&lt;/h2&gt; &lt;h3 id=&#34;writing&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/writing/writing/&#34;&gt;Writing&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Try vim-pencil without success, but love mdnav.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/chmp/mdnav&#34;&gt;mdnav&lt;/a&gt; opens links to urls or files when pressing &lt;code&gt;enter&lt;/code&gt; in normal mode over a markdown link, similar to &lt;code&gt;gx&lt;/code&gt; but more powerful. I specially like the ability of following &lt;code&gt;[self referencing link][]&lt;/code&gt; links, that allows storing the links at the bottom.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;build-your-own-digital-garden&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/writing/build_your_own_wiki/&#34;&gt;Build your own Digital Garden&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Explain how to enable clickable navigation sections in your mkdocs repository.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/oprypin&#34;&gt;oprypin&lt;/a&gt; has solved it with the &lt;a href=&#34;https://github.com/oprypin/mkdocs-section-index&#34;&gt;mkdocs-section-index&lt;/a&gt; plugin.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;digital-gardens&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/digital_garden/&#34;&gt;Digital Gardens&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the digital garden concept.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://joelhooks.com/digital-garden&#34;&gt;Digital Garden&lt;/a&gt; is a method of storing and maintaining knowledge in an maintainable, scalable and searchable way. They are also known as second brains.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;pilates&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/pilates/&#34;&gt;Pilates&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the art.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Pilates&#34;&gt;Pilates&lt;/a&gt; is a physical fitness system based on controlled movements putting emphasis on alignment, breathing, developing a strong core, and improving coordination and balance. The core (or powerhouse), consisting of the muscles of the abdomen, low back, and hips, is thought to be the key to a person&#39;s stability.&lt;/p&gt; &lt;p&gt;Pilates&#39; system allows for different exercises to be modified in range of difficulty from beginner to advanced or to any other level, and also in terms of the instructor and practitioner&#39;s specific goals and/or limitations. Intensity can be increased over time as the body adapts itself to the exercises.&lt;/p&gt; &lt;p&gt;You can think of yoga, but without the spiritual aspects.&lt;/p&gt; &lt;p&gt;Also added:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;It&#39;s principles&lt;/li&gt; &lt;li&gt;The &lt;a href=&#34;https://lyz-code.github.io/blue-book/pilates/#swing-from-table&#34;&gt;swing from table&lt;/a&gt; exercise.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;other&#34;&gt;Other&lt;/h2&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Correction: Deprecate mkdocs issues.&lt;/p&gt; &lt;p&gt;They&#39;ve been fixed in the last release&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;hr/&gt;  &lt;/article&gt;</description>
      <link>https://lyz-code.github.io/blue-book/newsletter/2021_02/</link>
      <pubDate>2021-03-19 10:17:33+00:00</pubDate>
      <source url="https://lyz-code.github.io/blue-book/monthly.xml">The Blue Book</source>
      <guid isPermaLink="true">https://lyz-code.github.io/blue-book/newsletter/2021_02/</guid>
      
    </item>
    
    <item><title>January of 2021</title>
      <author>Lyz</author>
      <description>&lt;article class=&#34;md-content__inner md-typeset&#34;&gt; &lt;a class=&#34;md-content__button md-icon&#34; href=&#34;https://github.com/lyz-code/blue-book/edit/master/docs/newsletter/2021_01.md&#34; title=&#34;Edit this page&#34;&gt; &lt;svg viewbox=&#34;0 0 24 24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M20.71 7.04c.39-.39.39-1.04 0-1.41l-2.34-2.34c-.37-.39-1.02-.39-1.41 0l-1.84 1.83 3.75 3.75M3 17.25V21h3.75L17.81 9.93l-3.75-3.75L3 17.25z&#34;&gt;&lt;/path&gt;&lt;/svg&gt; &lt;/a&gt;  &lt;h2 id=&#34;devops&#34;&gt;DevOps&lt;/h2&gt; &lt;h3 id=&#34;continuous-integration&#34;&gt;Continuous Integration&lt;/h3&gt; &lt;h4 id=&#34;bandit&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/bandit/&#34;&gt;Bandit&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to ignore errors.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;coding&#34;&gt;Coding&lt;/h2&gt; &lt;h3 id=&#34;python&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/python/&#34;&gt;Python&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to check if a loop ends completely.&lt;/li&gt; &lt;li&gt;New: Explain how to merge lists and dictionaries.&lt;/li&gt; &lt;li&gt;New: Explain how to create your own exceptions.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;libraries&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/requests_mock/&#34;&gt;Libraries&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to set cookies and headers in responses.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;deepdiff&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/deepdiff/&#34;&gt;DeepDiff&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Correction: Remove murmur from the installation steps.&lt;/p&gt; &lt;p&gt;It seems it&#39;s the default for the new versions&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;factoryboy&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/factoryboy/&#34;&gt;FactoryBoy&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Explain how to generate your own attributes.&lt;/p&gt; &lt;p&gt;We earlier used lazy_attribute but if you want to use Faker inside the attribute definition, you&#39;re going to have a bad time. The new solution uses the creation of custom Fake providers.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;faker&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/faker/&#34;&gt;Faker&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Explain how to create your own provider.&lt;/p&gt; &lt;p&gt;Useful to generate custom objects for testing purposes.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;python-snippets&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_snippets/&#34;&gt;Python Snippets&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;Correction: Explain how to show the message in custom exceptions.&lt;/li&gt; &lt;li&gt;New: Explain how to import a module or object from within a python program.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;pexpect&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/pexpect/&#34;&gt;pexpect&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the pexpect python library.&lt;/p&gt; &lt;p&gt;A pure Python module for spawning child applications; controlling them; and responding to expected patterns in their output. Pexpect works like Don Libes’ Expect. Pexpect allows your script to spawn a child application and control it as if a human were typing commands.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;prompt-toolkit&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/prompt_toolkit/&#34;&gt;Prompt Toolkit&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the tui python library.&lt;/p&gt; &lt;p&gt;Useful to build text-based user interfaces, it allows the creation of intelligent prompts, dialogs, and full screen ncurses-like applications.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;pydantic&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pydantic/&#34;&gt;Pydantic&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Explain how to initialize attributes.&lt;/p&gt; &lt;p&gt;Use validators to initialize attributes&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Name the pros and cons of using the library.&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: Explain how to create bidirectional relationship between entities.&lt;/li&gt; &lt;li&gt;New: Warn on the lack of TypeDict support.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;pypika&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pypika/&#34;&gt;Pypika&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to insert, update, select data.&lt;/li&gt; &lt;li&gt;New: Explain how to join tables.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;questionary&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/questionary/&#34;&gt;questionary&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce tui python library.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://questionary.readthedocs.io&#34;&gt;questionary&lt;/a&gt; is a Python library for effortlessly building pretty command line interfaces. It makes it very easy to query your user for input.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;requests&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/requests/&#34;&gt;Requests&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce the requests python library.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;rq&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/rq/&#34;&gt;Rq&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Add note to test arq.&lt;/p&gt; &lt;p&gt;arq is a similar library that can be better.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;sql&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/sql/sql/&#34;&gt;SQL&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Give examples on joins for each relationship type.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;sqlite&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/sqlite/&#34;&gt;SQLite&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Solve the autoincrementation not working bug.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;life-management&#34;&gt;Life Management&lt;/h2&gt; &lt;h3 id=&#34;automation&#34;&gt;Automation&lt;/h3&gt; &lt;h4 id=&#34;accounting-automation&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/accounting_automation/&#34;&gt;Accounting Automation&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain my accounting automation workflow.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;operative-systems&#34;&gt;Operative Systems&lt;/h2&gt; &lt;h3 id=&#34;linux&#34;&gt;Linux&lt;/h3&gt; &lt;h4 id=&#34;beancount&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/beancount/&#34;&gt;beancount&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce the cli double entry accounting program.&lt;/li&gt; &lt;li&gt;New: Add links on how to use as a library.&lt;/li&gt; &lt;li&gt;Correction: Correct the git repository link.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;android&#34;&gt;Android&lt;/h3&gt; &lt;h4 id=&#34;cone&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/cone/&#34;&gt;cone&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce the mobile double entry accounting application.&lt;/li&gt; &lt;li&gt;Correction: Correct the description of the transaction to be beancount compatible.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;other&#34;&gt;Other&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;New: Add remote work tips.&lt;/li&gt; &lt;li&gt;New: Introduce lazy loading implementation paradigm with python.&lt;/li&gt; &lt;li&gt;New: Explain how to lazy load pydantic objects.&lt;/li&gt; &lt;/ul&gt; &lt;hr/&gt;  &lt;/article&gt;</description>
      <link>https://lyz-code.github.io/blue-book/newsletter/2021_01/</link>
      <pubDate>2021-03-19 10:17:33+00:00</pubDate>
      <source url="https://lyz-code.github.io/blue-book/monthly.xml">The Blue Book</source>
      <guid isPermaLink="true">https://lyz-code.github.io/blue-book/newsletter/2021_01/</guid>
      
    </item>
    
    <item><title>December of 2020</title>
      <author>Lyz</author>
      <description>&lt;article class=&#34;md-content__inner md-typeset&#34;&gt; &lt;a class=&#34;md-content__button md-icon&#34; href=&#34;https://github.com/lyz-code/blue-book/edit/master/docs/newsletter/2020_12.md&#34; title=&#34;Edit this page&#34;&gt; &lt;svg viewbox=&#34;0 0 24 24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M20.71 7.04c.39-.39.39-1.04 0-1.41l-2.34-2.34c-.37-.39-1.02-.39-1.41 0l-1.84 1.83 3.75 3.75M3 17.25V21h3.75L17.81 9.93l-3.75-3.75L3 17.25z&#34;&gt;&lt;/path&gt;&lt;/svg&gt; &lt;/a&gt;  &lt;h2 id=&#34;devops&#34;&gt;DevOps&lt;/h2&gt; &lt;h3 id=&#34;continuous-integration&#34;&gt;Continuous Integration&lt;/h3&gt; &lt;h4 id=&#34;black&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/mypy/&#34;&gt;Black&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to fix the Module X has no attribute Y.&lt;/li&gt; &lt;li&gt;New: Explain how to prevent the formatter on some lines.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;monitoring&#34;&gt;Monitoring&lt;/h3&gt; &lt;h4 id=&#34;prometheus&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/prometheus/prometheus/&#34;&gt;Prometheus&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to install with docker.&lt;/li&gt; &lt;li&gt;Reorganization: Move the installation of docker to prometheus install.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;coding&#34;&gt;Coding&lt;/h2&gt; &lt;h3 id=&#34;python&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/python/&#34;&gt;Python&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to do a deep copy of a dictionary.&lt;/li&gt; &lt;li&gt;New: Explain how to solve the R0201 pylint error.&lt;/li&gt; &lt;li&gt;New: Do an initial analysis on Python profiling.&lt;/li&gt; &lt;li&gt;New: Introduce some ideas on optimization of python code.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;click&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/click/&#34;&gt;Click&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to set the allowable values for an argument.&lt;/li&gt; &lt;li&gt;New: Explain how to hide a command from the --help output.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;dash&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/sh/&#34;&gt;Dash&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to interact with programs that ask for user input.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;type-hints&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/type_hints/&#34;&gt;Type Hints&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Explain how to use the TypedDict instead of Dict.&lt;/p&gt; &lt;p&gt;Useful if the different keys have different types&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;code-styling&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/python_code_styling/&#34;&gt;Code Styling&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to fix the Pylint R0201 error.&lt;/li&gt; &lt;li&gt;New: Explain why we can safely ignore W1203.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;factoryboy&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/factoryboy/&#34;&gt;FactoryBoy&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;Correction: Add warning that generating your own attributes doesn&#39;t work anymore.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;faker&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/faker/&#34;&gt;Faker&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;Correction: Improve the way of generating random seed.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;pytest&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pytest/&#34;&gt;Pytest&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to change the log level with the caplog.&lt;/li&gt; &lt;li&gt;Correction: Add link to the unpack_fixture section.&lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Explain how to better use with pytest.raises snippets.&lt;/p&gt; &lt;p&gt;To capture the message in a cleaner way&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;pydantic&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pydantic/&#34;&gt;Pydantic&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to solve the E0611 error.&lt;/li&gt; &lt;li&gt;Correction: Explain how to solve the E0611 error in code lines.&lt;/li&gt; &lt;li&gt;Correction: Correct pylint R0201 on pydantic models.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;pypika&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pypika/&#34;&gt;Pypika&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to select, filter and delete data.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;sqlite3&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/sqlite3/&#34;&gt;sqlite3&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce the sqlite python library.&lt;/li&gt; &lt;li&gt;New: Explain how to get the columns of a sqlite3 query.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;sqlite&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/sqlite/&#34;&gt;SQLite&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Introduce sqlite and it&#39;s upsert feature.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;software-architecture&#34;&gt;Software Architecture&lt;/h2&gt; &lt;h3 id=&#34;domain-driven-design&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/architecture/domain_driven_design/&#34;&gt;Domain Driven Design&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to inject fake dependencies into e2e tests with click.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;life-management&#34;&gt;Life Management&lt;/h2&gt; &lt;h3 id=&#34;strategy&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/strategy/&#34;&gt;Strategy&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce strategy document.&lt;/p&gt; &lt;p&gt;Differentiate between strategic planning and strategic thinking&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;health&#34;&gt;Health&lt;/h2&gt; &lt;h3 id=&#34;sleep&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/sleep/&#34;&gt;Sleep&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Explain the independence between circadian and sleep pressure.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;operative-systems&#34;&gt;Operative Systems&lt;/h2&gt; &lt;h3 id=&#34;linux&#34;&gt;Linux&lt;/h3&gt; &lt;h4 id=&#34;vim&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/vim/&#34;&gt;Vim&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to manage python foldings.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;arts&#34;&gt;Arts&lt;/h2&gt; &lt;h3 id=&#34;video-gaming&#34;&gt;Video Gaming&lt;/h3&gt; &lt;h4 id=&#34;the-battle-for-wesnoth&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/wesnoth/&#34;&gt;The Battle for Wesnoth&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to play the loyalist civilization.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;other&#34;&gt;Other&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to fix W0707 mypy error.&lt;/li&gt; &lt;li&gt;New: Introduce wesnoth, and the northerners and rebels civilizations.&lt;/li&gt; &lt;li&gt;New: Explain how to use Wake on Lan.&lt;/li&gt; &lt;li&gt;New: Explain how to use TypeVar to specify children class.&lt;/li&gt; &lt;li&gt;New: Explain how to solve W0106 in list comprehensions.&lt;/li&gt; &lt;li&gt;New: Explain how to solve SIM105.&lt;/li&gt; &lt;/ul&gt; &lt;hr/&gt;  &lt;/article&gt;</description>
      <link>https://lyz-code.github.io/blue-book/newsletter/2020_12/</link>
      <pubDate>2021-03-19 10:17:33+00:00</pubDate>
      <source url="https://lyz-code.github.io/blue-book/monthly.xml">The Blue Book</source>
      <guid isPermaLink="true">https://lyz-code.github.io/blue-book/newsletter/2020_12/</guid>
      
    </item>
    
    <item><title>November of 2020</title>
      <author>Lyz</author>
      <description>&lt;article class=&#34;md-content__inner md-typeset&#34;&gt; &lt;a class=&#34;md-content__button md-icon&#34; href=&#34;https://github.com/lyz-code/blue-book/edit/master/docs/newsletter/2020_11.md&#34; title=&#34;Edit this page&#34;&gt; &lt;svg viewbox=&#34;0 0 24 24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M20.71 7.04c.39-.39.39-1.04 0-1.41l-2.34-2.34c-.37-.39-1.02-.39-1.41 0l-1.84 1.83 3.75 3.75M3 17.25V21h3.75L17.81 9.93l-3.75-3.75L3 17.25z&#34;&gt;&lt;/path&gt;&lt;/svg&gt; &lt;/a&gt;  &lt;h2 id=&#34;meta&#34;&gt;Meta&lt;/h2&gt; &lt;h3 id=&#34;projects&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/projects/projects/&#34;&gt;Projects&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Update information on active projects.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;devops&#34;&gt;DevOps&lt;/h2&gt; &lt;h3 id=&#34;infrastructure-as-code&#34;&gt;Infrastructure as Code&lt;/h3&gt; &lt;h4 id=&#34;helm&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/helm/helm/&#34;&gt;Helm&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce helm-git to install charts directly from git repositories.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;infrastructure-solutions&#34;&gt;Infrastructure Solutions&lt;/h3&gt; &lt;h4 id=&#34;kubernetes&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/kubernetes/kubernetes/&#34;&gt;Kubernetes&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain jobs, cronjobs and how to monitor them with prometheus.&lt;/li&gt; &lt;li&gt;New: Explain how to debug cronjob logs.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;kubectl&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/kubectl/kubectl/&#34;&gt;Kubectl&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Add kubectl command cheatsheet.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;continuous-integration&#34;&gt;Continuous Integration&lt;/h3&gt; &lt;h4 id=&#34;mypy&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/alex/&#34;&gt;Mypy&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the alex linter.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/alex/&#34;&gt;Alex&lt;/a&gt; helps you find gender favoring, polarizing, race related, religion inconsiderate, or other unequal phrasing in text.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Explain how to skip one line.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;yamlfix&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/yamlfix/&#34;&gt;Yamlfix&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Add yamlfix formatter.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;markdownlint&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/markdownlint/&#34;&gt;Markdownlint&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the markdownlint linter.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/markdownlint/&#34;&gt;markdownlint&lt;/a&gt; is A linter for Markdown files.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;proselint&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/proselint/&#34;&gt;Proselint&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce proselint linter.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/amperser/proselint/&#34;&gt;Proselint&lt;/a&gt; is another linter for prose.&lt;/p&gt; &lt;p&gt;feat(write-good) introduce the write-good linter&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/btford/write-good&#34;&gt;write-good&lt;/a&gt; is a naive linter for English prose.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;automating-processes&#34;&gt;Automating Processes&lt;/h3&gt; &lt;h4 id=&#34;cookiecutter&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/cookiecutter/&#34;&gt;cookiecutter&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to debug failing cookiecutter tests.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;coding&#34;&gt;Coding&lt;/h2&gt; &lt;h3 id=&#34;python&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/python/&#34;&gt;Python&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;Correction: Add email to the generated ssh snippet.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Explain how to make multiline code look clean.&lt;/p&gt; &lt;p&gt;Use &lt;code&gt;textwrap.dedent()&lt;/code&gt; to define variables that require multiline strings&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Explain how to play a file inside python.&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: Explain how to save a python object to a string using ruamel parser.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;dash&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/dash/&#34;&gt;Dash&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce dash and dash-leaflet.&lt;/p&gt; &lt;p&gt;Explain how to initiate dash and how to create a map with dash-leaflet&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;folium&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/folium/&#34;&gt;Folium&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to use folium, change tileset and load data.&lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Change the order of the layers.&lt;/p&gt; &lt;p&gt;Openstreetmaps is more clear than the IGN, so the waypoints are better seen&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;talkey&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/talkey/&#34;&gt;Talkey&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce text to speech python library.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;health&#34;&gt;Health&lt;/h2&gt; &lt;h3 id=&#34;sleep&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/sleep/&#34;&gt;Sleep&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Explain the benefits of sleep, the consequences of lack of sleep and the physiological effects of sleep including the circadian rhythm and what is melatonin.&lt;/li&gt; &lt;li&gt;New: Explain sleep pressure, caffeine and the relationship with the circadian rhythm.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;operative-systems&#34;&gt;Operative Systems&lt;/h2&gt; &lt;h3 id=&#34;linux&#34;&gt;Linux&lt;/h3&gt; &lt;h4 id=&#34;mkdocs&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/mkdocs/&#34;&gt;mkdocs&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;Correction: Correct meditation navigation element.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;vim&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/vim/&#34;&gt;Vim&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Create ALEToggleFixer command to enable/disable fixers.&lt;/li&gt; &lt;li&gt;New: Make fugitive commit workflow more user friendly.&lt;/li&gt; &lt;li&gt;Correction: Add movement mappings for the commit message window.&lt;/li&gt; &lt;li&gt;New: Explain how to use YouCompleteMe to complete prose.&lt;/li&gt; &lt;li&gt;Correction: Explain how to limit the autosuggestion results to one when writing prose.&lt;/li&gt; &lt;li&gt;New: Explain how to search synonyms inside vim.&lt;/li&gt; &lt;li&gt;Correction: Improve the environment to write commits with more bindings and restoring bindings once you close the message.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;arts&#34;&gt;Arts&lt;/h2&gt; &lt;h3 id=&#34;writing&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/writing/writing/&#34;&gt;Writing&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Explain the guidelines and tools I use for writing.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;meditation&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/meditation/&#34;&gt;Meditation&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Define meditation and it&#39;s types.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;other&#34;&gt;Other&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;Correction: Explain how to get started.&lt;/li&gt; &lt;li&gt;Correction: References between articles.&lt;/li&gt; &lt;/ul&gt; &lt;hr/&gt;  &lt;/article&gt;</description>
      <link>https://lyz-code.github.io/blue-book/newsletter/2020_11/</link>
      <pubDate>2021-03-27 19:02:28+00:00</pubDate>
      <source url="https://lyz-code.github.io/blue-book/monthly.xml">The Blue Book</source>
      <guid isPermaLink="true">https://lyz-code.github.io/blue-book/newsletter/2020_11/</guid>
      
    </item>
    
    <item><title>October of 2020</title>
      <author>Lyz</author>
      <description>&lt;article class=&#34;md-content__inner md-typeset&#34;&gt; &lt;a class=&#34;md-content__button md-icon&#34; href=&#34;https://github.com/lyz-code/blue-book/edit/master/docs/newsletter/2020_10.md&#34; title=&#34;Edit this page&#34;&gt; &lt;svg viewbox=&#34;0 0 24 24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M20.71 7.04c.39-.39.39-1.04 0-1.41l-2.34-2.34c-.37-.39-1.02-.39-1.41 0l-1.84 1.83 3.75 3.75M3 17.25V21h3.75L17.81 9.93l-3.75-3.75L3 17.25z&#34;&gt;&lt;/path&gt;&lt;/svg&gt; &lt;/a&gt;  &lt;h2 id=&#34;devops&#34;&gt;DevOps&lt;/h2&gt; &lt;h3 id=&#34;continuous-integration&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/ci/&#34;&gt;Continuous Integration&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;Reorganization: Split CI documents into their own pages.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;black&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/black/&#34;&gt;Black&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;Improvement: Add git link.&lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Configure black to process long lines.&lt;/p&gt; &lt;p&gt;Use the &lt;code&gt;--experimental-string-procesing&lt;/code&gt; flag to process long lines.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;bandit&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/flakehell/&#34;&gt;Bandit&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce flakehell python linter.&lt;/p&gt; &lt;p&gt;Flakehell is a &lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/flake8/&#34;&gt;Flake8&lt;/a&gt; wrapper to make it cool.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Annotate the slowness of the bandit tests in pre-commit.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;automating-processes&#34;&gt;Automating Processes&lt;/h3&gt; &lt;h4 id=&#34;cookiecutter&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/cookiecutter/&#34;&gt;cookiecutter&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to use a default configuration for all your templates.&lt;/li&gt; &lt;li&gt;Improvement: Add references on why is not easy to update cookiecutter templates.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;cruft&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/cruft/&#34;&gt;cruft&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce cruft tool to manage cookiecutter templates.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://cruft.github.io/cruft/&#34;&gt;cruft&lt;/a&gt; allows you to maintain all the necessary boilerplate for packaging and building projects separate from the code you intentionally write. Fully compatible with existing &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/cookiecutter/&#34;&gt;Cookiecutter&lt;/a&gt; templates.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;monitoring&#34;&gt;Monitoring&lt;/h3&gt; &lt;h4 id=&#34;prometheus&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/prometheus/prometheus/&#34;&gt;Prometheus&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to find a metric name.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add statistical analysis on instance sizes using prometheus metrics.&lt;/p&gt; &lt;p&gt;Explain how to configure prometheus to automatically check if your instances are of the correct size and which are your bottlenecks.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;coding&#34;&gt;Coding&lt;/h2&gt; &lt;h3 id=&#34;python&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/python/&#34;&gt;Python&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Introduce the python docstrings.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add python snippets article.&lt;/p&gt; &lt;p&gt;Includes the generation of OpenSSH keys with the cryptography library&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Improvement: Correct typo in the generation of ssh keys.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;click&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/click/&#34;&gt;Click&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Improve arguments documentation.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Add example on how to use variadic arguments.&lt;/li&gt; &lt;li&gt;Explain how to use File and Path click arguments&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;pytest&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pytest/&#34;&gt;Pytest&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to save the fixtures into a separate file.&lt;/li&gt; &lt;li&gt;New: Explain the different parametrization options. Introduce the awesome pytest-cases.&lt;/li&gt; &lt;li&gt;New: Explain how to use marks to group the tests.&lt;/li&gt; &lt;li&gt;New: Explain how to test error raising with pytest.&lt;/li&gt; &lt;li&gt;Improvement: Solve W0621 Redefining name %r from outer scope (line %s) error.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;mkdocstrings&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/mkdocstrings/&#34;&gt;mkdocstrings&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the mkdocstrings library.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://pawamoy.github.io/mkdocstrings&#34;&gt;mkdocstrings&lt;/a&gt; is a library to automatically generate &lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/mkdocs/&#34;&gt;mkdocs&lt;/a&gt; pages from the code docstrings.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;passpy&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/passpy/&#34;&gt;Passpy&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Introduce the passpy library.&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/bfrascher/passpy&#34;&gt;passpy&lt;/a&gt; a platform independent library and cli that is compatible with &lt;a href=&#34;http://www.passwordstore.org/&#34;&gt;ZX2C4&#39;s pass&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;pydantic&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pydantic/&#34;&gt;Pydantic&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce pydantic with it&#39;s models and types.&lt;/li&gt; &lt;li&gt;New: Explain how validators work.&lt;/li&gt; &lt;li&gt;New: Explain how to export the models.&lt;/li&gt; &lt;li&gt;New: Explain how to validate functions and use the mypy plugin.&lt;/li&gt; &lt;li&gt;New: Explain how to initialize empty iterables on attributes.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;pypika&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pypika/&#34;&gt;Pypika&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce pypika.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;yoyo&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/yoyo/&#34;&gt;Yoyo&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce yoyo database migration tool.&lt;/li&gt; &lt;li&gt;New: Explain how to do yoyo table relationships.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;sql&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/sql/sql/&#34;&gt;SQL&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Introduce the sql data types.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;operative-systems&#34;&gt;Operative Systems&lt;/h2&gt; &lt;h3 id=&#34;linux&#34;&gt;Linux&lt;/h3&gt; &lt;h4 id=&#34;haproxy&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/haproxy/&#34;&gt;HAProxy&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce haproxy and how to do a reverse proxy with it.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;zfs&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/zfs/&#34;&gt;ZFS&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce zfs and some basic commands.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;other&#34;&gt;Other&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;New: Evaluate the different solutions to programmatically interact with databases.&lt;/li&gt; &lt;li&gt;Correction: Remove xkcd image.&lt;/li&gt; &lt;li&gt;Reorganization: Extract type hints to it&#39;s own file.&lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Bump material version to 6.0.2.&lt;/p&gt; &lt;p&gt;Also take the chance to move images directory to img&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Correction: Correct repository pattern images path.&lt;/p&gt; &lt;/li&gt; &lt;li&gt;Correction: Correct image paths.&lt;/li&gt; &lt;li&gt;Correction: Add note on the flexibility of query builders.&lt;/li&gt; &lt;li&gt;Correction: Remove type hints from python code styling.&lt;/li&gt; &lt;li&gt;New: Explain the use of Generic typing.&lt;/li&gt; &lt;li&gt;Correction: Correct domain driven design image path.&lt;/li&gt; &lt;li&gt;Correction: Remove broken links.&lt;/li&gt; &lt;li&gt;New: Explain how to make your python packages mypy compliant.&lt;/li&gt; &lt;li&gt;Correction: Explain how to remove all pip packages from a virtualenv.&lt;/li&gt; &lt;li&gt;Correction: Discourage the use of pip-tools in the CI.&lt;/li&gt; &lt;/ul&gt; &lt;hr/&gt;  &lt;/article&gt;</description>
      <link>https://lyz-code.github.io/blue-book/newsletter/2020_10/</link>
      <pubDate>2021-03-19 10:17:33+00:00</pubDate>
      <source url="https://lyz-code.github.io/blue-book/monthly.xml">The Blue Book</source>
      <guid isPermaLink="true">https://lyz-code.github.io/blue-book/newsletter/2020_10/</guid>
      
    </item>
    
    <item><title>September of 2020</title>
      <author>Lyz</author>
      <description>&lt;article class=&#34;md-content__inner md-typeset&#34;&gt; &lt;a class=&#34;md-content__button md-icon&#34; href=&#34;https://github.com/lyz-code/blue-book/edit/master/docs/newsletter/2020_09.md&#34; title=&#34;Edit this page&#34;&gt; &lt;svg viewbox=&#34;0 0 24 24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M20.71 7.04c.39-.39.39-1.04 0-1.41l-2.34-2.34c-.37-.39-1.02-.39-1.41 0l-1.84 1.83 3.75 3.75M3 17.25V21h3.75L17.81 9.93l-3.75-3.75L3 17.25z&#34;&gt;&lt;/path&gt;&lt;/svg&gt; &lt;/a&gt;  &lt;h2 id=&#34;coding&#34;&gt;Coding&lt;/h2&gt; &lt;h3 id=&#34;python&#34;&gt;Python&lt;/h3&gt; &lt;h4 id=&#34;click&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/click/&#34;&gt;Click&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce the boolean options and variadic arguments.&lt;/li&gt; &lt;li&gt;New: Explain how to use a default command to a click group.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;type-hints&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/type_hints/&#34;&gt;Type Hints&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Improve the definition of objects with multiple types with TypeVar.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;deepdiff&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/deepdiff/&#34;&gt;DeepDiff&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Introduce the deepdiff library.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;pytest&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pytest/&#34;&gt;Pytest&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Add freezegun fixture.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;software-architecture&#34;&gt;Software Architecture&lt;/h2&gt; &lt;h3 id=&#34;domain-driven-design&#34;&gt;Domain Driven Design&lt;/h3&gt; &lt;h4 id=&#34;repository-pattern&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/architecture/repository_pattern/&#34;&gt;Repository Pattern&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Warn about the definition of attributes created by the ORMs.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;other&#34;&gt;Other&lt;/h2&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;New: Add more steps.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Quick tempo running man&lt;/li&gt; &lt;li&gt;Quick tempo T-Step&lt;/li&gt; &lt;li&gt;Francis T-Step&lt;/li&gt; &lt;li&gt;Sacco kicks&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add Francis spin and first version of dance routine.&lt;/p&gt; &lt;p&gt;Corrected how to reach the quick tempo running man.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: More guidelines on how to speed up the running man.&lt;/p&gt; &lt;p&gt;And refactor in different files&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;New: Add times for next steps to learn.&lt;/p&gt; &lt;/li&gt; &lt;li&gt;New: Added ash, birch and beech description.&lt;/li&gt; &lt;li&gt;New: Introduce wireguard.&lt;/li&gt; &lt;li&gt;New: Explain how to debug elasticsearch yellow state.&lt;/li&gt; &lt;li&gt;Correction: Update python ci docs.&lt;/li&gt; &lt;li&gt;New: Explain how to solve cyclic imports when using type hints.&lt;/li&gt; &lt;/ul&gt; &lt;hr/&gt;  &lt;/article&gt;</description>
      <link>https://lyz-code.github.io/blue-book/newsletter/2020_09/</link>
      <pubDate>2021-03-19 10:06:24+00:00</pubDate>
      <source url="https://lyz-code.github.io/blue-book/monthly.xml">The Blue Book</source>
      <guid isPermaLink="true">https://lyz-code.github.io/blue-book/newsletter/2020_09/</guid>
      
    </item>
    
    <item><title>August of 2020</title>
      <author>Lyz</author>
      <description>&lt;article class=&#34;md-content__inner md-typeset&#34;&gt; &lt;a class=&#34;md-content__button md-icon&#34; href=&#34;https://github.com/lyz-code/blue-book/edit/master/docs/newsletter/2020_08.md&#34; title=&#34;Edit this page&#34;&gt; &lt;svg viewbox=&#34;0 0 24 24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M20.71 7.04c.39-.39.39-1.04 0-1.41l-2.34-2.34c-.37-.39-1.02-.39-1.41 0l-1.84 1.83 3.75 3.75M3 17.25V21h3.75L17.81 9.93l-3.75-3.75L3 17.25z&#34;&gt;&lt;/path&gt;&lt;/svg&gt; &lt;/a&gt;  &lt;h2 id=&#34;devops&#34;&gt;DevOps&lt;/h2&gt; &lt;h3 id=&#34;infrastructure-as-code&#34;&gt;Infrastructure as Code&lt;/h3&gt; &lt;h4 id=&#34;helmfile&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/helmfile/&#34;&gt;Helmfile&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Tell how to make long diffs usable.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;continuous-integration&#34;&gt;Continuous Integration&lt;/h3&gt; &lt;h4 id=&#34;mypy&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/mypy/&#34;&gt;Mypy&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to reveal the type of an expression.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;automating-processes&#34;&gt;Automating Processes&lt;/h3&gt; &lt;h4 id=&#34;cookiecutter&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/cookiecutter/&#34;&gt;cookiecutter&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to remove unwanted directories.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;monitoring&#34;&gt;Monitoring&lt;/h3&gt; &lt;h4 id=&#34;node-exporter&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/devops/prometheus/node_exporter/&#34;&gt;Node Exporter&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Filter out stopped instances.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;coding&#34;&gt;Coding&lt;/h2&gt; &lt;h3 id=&#34;python&#34;&gt;Python&lt;/h3&gt; &lt;h4 id=&#34;alembic&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/alembic/&#34;&gt;Alembic&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;Correction: Explain how to use alembic from a python scripts and not.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;click&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/click/&#34;&gt;Click&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to setup and test a click application.&lt;/li&gt; &lt;li&gt;New: Introduce click arguments.&lt;/li&gt; &lt;li&gt;New: Explain how to accept options from environmental variables and how to handle contexts.&lt;/li&gt; &lt;li&gt;Correction: Add note on capturing stderr and stdout with caplog instead of click methods.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;faker&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/faker/&#34;&gt;Faker&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain how to populate the faker fixture with random seeds.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;pytest&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/python/pytest/&#34;&gt;Pytest&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Explain what fixtures are.&lt;/li&gt; &lt;li&gt;New: Tell how to use a fixture more than once in a function.&lt;/li&gt; &lt;li&gt;New: Document the capsys, caplog and tmpdir builtin fixtures.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;operative-systems&#34;&gt;Operative Systems&lt;/h2&gt; &lt;h3 id=&#34;linux&#34;&gt;Linux&lt;/h3&gt; &lt;h4 id=&#34;monica&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/monica/&#34;&gt;monica&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Add monica installation.&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&#34;vim&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/vim/&#34;&gt;Vim&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Add only part of files to the index to stage.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;other&#34;&gt;Other&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;New: Add first cutting shapes steps.&lt;/li&gt; &lt;li&gt;Correction: Improve the changelog generation with commitizen.&lt;/li&gt; &lt;li&gt;Correction: Remove unwanted gifs on rave dances.&lt;/li&gt; &lt;li&gt;New: Add kicking-running man and tap spin.&lt;/li&gt; &lt;li&gt;New: Prevent additional whitespaces when jinja condition is not met.&lt;/li&gt; &lt;li&gt;Correction: Correct the running man.&lt;/li&gt; &lt;li&gt;New: Add how to keep historical data on database table changes.&lt;/li&gt; &lt;li&gt;New: List all process swap space usage.&lt;/li&gt; &lt;li&gt;New: Introduce the click python library.&lt;/li&gt; &lt;/ul&gt; &lt;hr/&gt;  &lt;/article&gt;</description>
      <link>https://lyz-code.github.io/blue-book/newsletter/2020_08/</link>
      <pubDate>2021-03-19 10:17:33+00:00</pubDate>
      <source url="https://lyz-code.github.io/blue-book/monthly.xml">The Blue Book</source>
      <guid isPermaLink="true">https://lyz-code.github.io/blue-book/newsletter/2020_08/</guid>
      
    </item>
    
    <item><title>July of 2020</title>
      <author>Lyz</author>
      <description>&lt;article class=&#34;md-content__inner md-typeset&#34;&gt; &lt;a class=&#34;md-content__button md-icon&#34; href=&#34;https://github.com/lyz-code/blue-book/edit/master/docs/newsletter/2020_07.md&#34; title=&#34;Edit this page&#34;&gt; &lt;svg viewbox=&#34;0 0 24 24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;path d=&#34;M20.71 7.04c.39-.39.39-1.04 0-1.41l-2.34-2.34c-.37-.39-1.02-.39-1.41 0l-1.84 1.83 3.75 3.75M3 17.25V21h3.75L17.81 9.93l-3.75-3.75L3 17.25z&#34;&gt;&lt;/path&gt;&lt;/svg&gt; &lt;/a&gt;  &lt;h2 id=&#34;devops&#34;&gt;DevOps&lt;/h2&gt; &lt;h3 id=&#34;automating-processes&#34;&gt;Automating Processes&lt;/h3&gt; &lt;h4 id=&#34;cookiecutter&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/linux/cookiecutter/&#34;&gt;cookiecutter&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Add cookiecutter template testing guidelines.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;coding&#34;&gt;Coding&lt;/h2&gt; &lt;h3 id=&#34;python&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/python/&#34;&gt;Python&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Add cookiecutter documentation.&lt;/li&gt; &lt;li&gt;New: Add docker construction for a python project.&lt;/li&gt; &lt;li&gt;New: Add commit guidelines with commitizen.&lt;/li&gt; &lt;li&gt;Correction: Type hints of subclasses of abstract classes.&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&#34;json&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/coding/json/json/&#34;&gt;JSON&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Add json linters and fixers.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;operative-systems&#34;&gt;Operative Systems&lt;/h2&gt; &lt;h3 id=&#34;linux&#34;&gt;Linux&lt;/h3&gt; &lt;h4 id=&#34;vim&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/vim/&#34;&gt;Vim&lt;/a&gt;&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;New: Add ale language server processor Vim plugin.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;arts&#34;&gt;Arts&lt;/h2&gt; &lt;h3 id=&#34;writing&#34;&gt;&lt;a href=&#34;https://lyz-code.github.io/blue-book/writing/writing/&#34;&gt;Writing&lt;/a&gt;&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;New: Add there is/are avoidance pattern.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&#34;other&#34;&gt;Other&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;New: Add sh awesome library.&lt;/li&gt; &lt;li&gt;Correction: Fix broken links.&lt;/li&gt; &lt;li&gt;New: Add factoryboy factory usage.&lt;/li&gt; &lt;li&gt;New: Add the xy problem.&lt;/li&gt; &lt;li&gt;New: Add tinydb documentation.&lt;/li&gt; &lt;li&gt;New: Add prevent cookiecutter from processing some files docs.&lt;/li&gt; &lt;/ul&gt; &lt;hr/&gt;  &lt;/article&gt;</description>
      <link>https://lyz-code.github.io/blue-book/newsletter/2020_07/</link>
      <pubDate>2021-03-27 19:02:28+00:00</pubDate>
      <source url="https://lyz-code.github.io/blue-book/monthly.xml">The Blue Book</source>
      <guid isPermaLink="true">https://lyz-code.github.io/blue-book/newsletter/2020_07/</guid>
      
    </item>
    
  </channel>
</rss>