{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"This is my personal wiki where I share everything I know about this world in form of an online mkdocs book hosted on GitHub . If this is your first time visiting this wiki, take a look at meta , as it describes this wiki, its structure and goals in more detail. Using the wiki well \u00b6 You can quickly search the contents of this wiki above or you can explore the tree view to the left. Start with the first article that grabs your attention and be ready to incrementally read the rest. Or you can use it as a reference, cloning the git repository and using grep. Make your own wiki \u00b6 Don't be afraid to create one of your own and share what you know with the world. In case you don't want to make your own, I invite you to use a fork of mine and make contributions , the more the merrier. You can view other similar continuously updated wikis to get inspiration. Contributing \u00b6 If you find a mistake anywhere in this wiki or want to add new content, I'll be glad to accept your contribution. You can quickly find any entry you wish to edit by searching for the topic or use the edit button on the top right of any article to add your changes with a PR. I also appreciate any ideas you have on how I can improve this wiki. And if you don't want to go through the hassle of building your own, you can use mine Thank you \u00b6 If you liked my book and want to make me happy, please see if you know how could I fulfill any item of my wishlist or see if you want to contribute to my other projects .","title":"Introduction"},{"location":"#using-the-wiki-well","text":"You can quickly search the contents of this wiki above or you can explore the tree view to the left. Start with the first article that grabs your attention and be ready to incrementally read the rest. Or you can use it as a reference, cloning the git repository and using grep.","title":"Using the wiki well"},{"location":"#make-your-own-wiki","text":"Don't be afraid to create one of your own and share what you know with the world. In case you don't want to make your own, I invite you to use a fork of mine and make contributions , the more the merrier. You can view other similar continuously updated wikis to get inspiration.","title":"Make your own wiki"},{"location":"#contributing","text":"If you find a mistake anywhere in this wiki or want to add new content, I'll be glad to accept your contribution. You can quickly find any entry you wish to edit by searching for the topic or use the edit button on the top right of any article to add your changes with a PR. I also appreciate any ideas you have on how I can improve this wiki. And if you don't want to go through the hassle of building your own, you can use mine","title":"Contributing"},{"location":"#thank-you","text":"If you liked my book and want to make me happy, please see if you know how could I fulfill any item of my wishlist or see if you want to contribute to my other projects .","title":"Thank you"},{"location":"about/","text":"","title":"About"},{"location":"contact/","text":"I'm available by: Email or XMPP at lyz@riseup.net . PGP Key: 6ADA882386CDF9BD1884534C6C7D7C1612CDE02F -----BEGIN PGP PUBLIC KEY BLOCK----- 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 =9EvG -----END PGP PUBLIC KEY BLOCK----- Through Github by opening an issue .","title":"Contact"},{"location":"knowledge/","text":"Different levels of reading \u00b6 Synoptical reading \u00b6 Underlining workflow on polar \u00b6 Read the paragraphs of an idea. Underline it: Yellow: Relevant stuff Purple: Key idea (This helps the identification of when does an Anki card need to be created) Sum up the paragraphs and create the Anki cards. Create a pagemark to the last piece of resumed content. Creating Anki cards \u00b6 Don't use questions, use Name the X ... or Explain the .. Give context to the question, you'll probably study cards from different decks, or the same concept will mean different things in different environments. Take into account that you are going to continuously improve the cards, so release fast and early. So use the following templates: Name the X .* when .* Explain the X .* when .*","title":"Knowledge"},{"location":"knowledge/#different-levels-of-reading","text":"","title":"Different levels of reading"},{"location":"knowledge/#synoptical-reading","text":"","title":"Synoptical reading"},{"location":"knowledge/#underlining-workflow-on-polar","text":"Read the paragraphs of an idea. Underline it: Yellow: Relevant stuff Purple: Key idea (This helps the identification of when does an Anki card need to be created) Sum up the paragraphs and create the Anki cards. Create a pagemark to the last piece of resumed content.","title":"Underlining workflow on polar"},{"location":"knowledge/#creating-anki-cards","text":"Don't use questions, use Name the X ... or Explain the .. Give context to the question, you'll probably study cards from different decks, or the same concept will mean different things in different environments. Take into account that you are going to continuously improve the cards, so release fast and early. So use the following templates: Name the X .* when .* Explain the X .* when .*","title":"Creating Anki cards"},{"location":"life-hacks/","text":"Trydactil configuration","title":"Life hacks"},{"location":"life.management/","text":"Weekly organization on wednesdays, I tried on mondays","title":"Life.management"},{"location":"media-management/","text":"In Sonarr: Stop monitoring the series that have ended and that have all the chapters, so they don't appear in the monitoring tab and so we don't waste resources. In Radarr: The elements that are failed parsing, move them manually to the expected format {{ title }} ({{ year }}) {{quality}}.{{ extension }} . To get the quality check other existent imported media.","title":"Media management"},{"location":"task_management/","text":"Only have actionable tasks in task manager, the rest in the projects page","title":"Task Management Notes"},{"location":"wishlist/","text":"This is a gathering of tools, ideas or services that I'd like to enjoy. If you have any lead, as smallest as it may be on how to fulfill them, please contact me . Self hosted search engine \u00b6 It would be awesome to be able to self host a personal search engine that performs priorized queries in the data sources that I choose. This idea comes from me getting tired of: Forgetting to search in my gathered knowledge before going to the internet. Not being able to priorize known trusted sources. Some sources I'd like to query: Markdown brains, like my blue and red books. Awesome lists. My browsing history. Blogs. learn-anything . Musicbrainz . themoviedb . wikipedia reddit . stackoverflow . startpage Each source should be added as a plugin to let people develop their own. I'd also like to be able to rate in my browsing the webpages so they get more relevance in future searches. That rating can also influence the order of the different sources. It will archive the rated websites to avoid link rot . If we use a knowledge graph, we could federate to ask other nodes and help discover or priorize content. The browsing could be related with knowledge graph tags. We can also have integration with Anki after a search is done. A possible architecture could be: A flask + Reactjs frontend. An elasticsearch instance for persistence. A Neo4j or knowledge graph to get relations. It must be open sourced and Linux compatible. And it would be awesome if I didn't have to learn how to use another editor. Others \u00b6 Movie/serie/music rating self hosted solution that based on your ratings discovers new content. Digital e-ink note taking system that is affordable, self hosted and performs character recognition.","title":"Wishlist"},{"location":"wishlist/#self-hosted-search-engine","text":"It would be awesome to be able to self host a personal search engine that performs priorized queries in the data sources that I choose. This idea comes from me getting tired of: Forgetting to search in my gathered knowledge before going to the internet. Not being able to priorize known trusted sources. Some sources I'd like to query: Markdown brains, like my blue and red books. Awesome lists. My browsing history. Blogs. learn-anything . Musicbrainz . themoviedb . wikipedia reddit . stackoverflow . startpage Each source should be added as a plugin to let people develop their own. I'd also like to be able to rate in my browsing the webpages so they get more relevance in future searches. That rating can also influence the order of the different sources. It will archive the rated websites to avoid link rot . If we use a knowledge graph, we could federate to ask other nodes and help discover or priorize content. The browsing could be related with knowledge graph tags. We can also have integration with Anki after a search is done. A possible architecture could be: A flask + Reactjs frontend. An elasticsearch instance for persistence. A Neo4j or knowledge graph to get relations. It must be open sourced and Linux compatible. And it would be awesome if I didn't have to learn how to use another editor.","title":"Self hosted search engine"},{"location":"wishlist/#others","text":"Movie/serie/music rating self hosted solution that based on your ratings discovers new content. Digital e-ink note taking system that is affordable, self hosted and performs character recognition.","title":"Others"},{"location":"feminism/men-groups/","text":"Non mixed men groups are emerging all over the world as a place for men to fight for the feminist ideals. TBC","title":"Men group notes"},{"location":"feminism/privileges/","text":"This page has been gathered from my white cis male brain with myself and fellow privileged readers as target group. What are the privileges \u00b6 Privileges are a group of special structural benefits, social advantages, that a group holds over another. So they are elements that should be removed from our lives. What are the origins of the privileges? : Although our individualist culture pushes us to think that they are the result of our own individual efforts, they mainly come from facts that are structural, so they are out of our reach. Such as our genre, skin colour, ethnic, sexuality or overall economic status. Most of the things we consider privileges are rights that we should universalize. This confusion makes us mix them with the ones that should be eliminated because they reinforce the hierarchies and give the privileged license to keep on feeding the inequality relationships. How do I differentiate between privileges and rights? : We can answer the question: Is it desirable to remove that privilege to the privileged? * If the answer is yes, it is a privilege and we should fight to remove it. * If the answer is no, then we should fight for universalize the right. What can we do to fight the privileges? \u00b6 As white cis males we can: Make the different access to the basic security and dignity rights visible. Raise awareness on yourself and others on this topic between our fellow privileged environment. It's more effective to address and permeate a privileged person from a privileged position. Unstructured ideas \u00b6 It is really difficult to notice a privilege if you've always liven with it. Go to the Michael Kimmel book for more information. The limits and barriers that slow us down is what is usually seen, unlike the facilities we have to run faster. The individual solutions usually fail to solve social issues. Unfinished list of male privileges \u00b6 Male positions are more valued by social structures, even when we are wrong. There are several abilities that are taken for granted. We can neglect the care work. We are more hireables as stated by the Jennifer-John effect . We scalate more in the organizational hierarchy due to informal fraternity networks. We can use violence when we want. Unfinished list of rights to universalize \u00b6 Science in general is performed by white male cis for the white male cis humans. Therefore there is a medical gender gap or facial recognition algorithms struggle to recognize black faces . Resources \u00b6 Articles \u00b6 \u00bfExisten los privilegios masculinos? Books \u00b6 Privilege through the looking glass by Patricia Leavy Privilege A reader by Michael Kimmel Essays \u00b6 White Privilege: Unpacking the Invisible Knapsack by Peggy McIntosh","title":"Privilege notes"},{"location":"feminism/privileges/#what-are-the-privileges","text":"Privileges are a group of special structural benefits, social advantages, that a group holds over another. So they are elements that should be removed from our lives. What are the origins of the privileges? : Although our individualist culture pushes us to think that they are the result of our own individual efforts, they mainly come from facts that are structural, so they are out of our reach. Such as our genre, skin colour, ethnic, sexuality or overall economic status. Most of the things we consider privileges are rights that we should universalize. This confusion makes us mix them with the ones that should be eliminated because they reinforce the hierarchies and give the privileged license to keep on feeding the inequality relationships. How do I differentiate between privileges and rights? : We can answer the question: Is it desirable to remove that privilege to the privileged? * If the answer is yes, it is a privilege and we should fight to remove it. * If the answer is no, then we should fight for universalize the right.","title":"What are the privileges"},{"location":"feminism/privileges/#what-can-we-do-to-fight-the-privileges","text":"As white cis males we can: Make the different access to the basic security and dignity rights visible. Raise awareness on yourself and others on this topic between our fellow privileged environment. It's more effective to address and permeate a privileged person from a privileged position.","title":"What can we do to fight the privileges?"},{"location":"feminism/privileges/#unstructured-ideas","text":"It is really difficult to notice a privilege if you've always liven with it. Go to the Michael Kimmel book for more information. The limits and barriers that slow us down is what is usually seen, unlike the facilities we have to run faster. The individual solutions usually fail to solve social issues.","title":"Unstructured ideas"},{"location":"feminism/privileges/#unfinished-list-of-male-privileges","text":"Male positions are more valued by social structures, even when we are wrong. There are several abilities that are taken for granted. We can neglect the care work. We are more hireables as stated by the Jennifer-John effect . We scalate more in the organizational hierarchy due to informal fraternity networks. We can use violence when we want.","title":"Unfinished list of male privileges"},{"location":"feminism/privileges/#unfinished-list-of-rights-to-universalize","text":"Science in general is performed by white male cis for the white male cis humans. Therefore there is a medical gender gap or facial recognition algorithms struggle to recognize black faces .","title":"Unfinished list of rights to universalize"},{"location":"feminism/privileges/#resources","text":"","title":"Resources"},{"location":"feminism/privileges/#articles","text":"\u00bfExisten los privilegios masculinos?","title":"Articles"},{"location":"feminism/privileges/#books","text":"Privilege through the looking glass by Patricia Leavy Privilege A reader by Michael Kimmel","title":"Books"},{"location":"feminism/privileges/#essays","text":"White Privilege: Unpacking the Invisible Knapsack by Peggy McIntosh","title":"Essays"},{"location":"life_automation/grocy/","text":"grocy is a web-based self-hosted groceries & household management solution for your home. It is really easy to deploy if you know how to use Docker . The hard part comes when you & have to do the first inventory, as you have to: Add all the products one by one. Add all the product locations. Add all the product groups. Add all the quantity conversions. Tips \u00b6 Add first the products with less letters, so add first Toothpaste and then Toothpaste roommate . Do the filling in iterations: Add the common producs: this can be done with the ticket of the last groceries, or manually inspecting all the elements in your home. Incrementally add the recipes that you use Add the barcodes in the products that make sense. Add the score and shop userfields for the products, so you can evaluate how much you like the product and where to buy it. If you show them in the columns, you can also filter the shopping list by shop. Minimum quantities \u00b6 The minimum quantity defines when does the product is going to be added to the shopping list, it must be enough so we have time to go to the shop to buy more, so it has to follow: minimum quantity = max_shop_frequency * average_consumption_rate * security_factor Where: * max_shop_frequency : is the maximum number of days between I visit the shop where I can obtain that product. If the product can be obtained in several shops we'll take the smallest number of days. * average_consumption_rate : is the average number of units consumed per day. It can be calculated by the following equation: average_consumption_rate = total_units_consumed / days_since_first_unit_bought The calculation could be improved giving more weight to the recent consumption against the overall trend. security_factor : Is an amount to add to take into account the imprecisions on the measures. A starting security_factor could be 1.2. But we won't have most of the required data when we start from scratch, therefore I've followed the next criteria: If the product is critical, I want to always have at least a spare one, so the minimum quantity will be 2. I roughly evaluate the relationship between the average_consumption_rate and the max_shop_frequency . Also, I usually have a recipient for the critical products, so I mark the product as consumed once I transfer it from the original recipient to my recipient. Therefore I always have a security factor. This also helps to reduce the management time. For example, for the fruit, instead of marking as consumed each time I eat a piece, I mark them as consumed when I move them from the fridge to a recipient I've got in the living room. Parent products \u00b6 Parent products let you group different kind of products under the same roof. The idea is to set the minimum quantity in the parent product and it will inherit all the quantities of it's children. I've used parent products for example to set a minimum amount of red tea, while storing the different red teas in different products. The advantage of this approach is that you have a detailed product page for each kind of product. This allows you to have different purchase - storage ratio, price evolution, set score and description for the different kinds, set different store... The disadvantage is that you have to add and maintain additional products. So if you expect that the difference between products is relevant split them, if you don't start with one product that aggregates all, like chocolate bar for all kinds of chocolate bars, and maybe in the future refactor it to a parent and child products. Another good use case is if the different brands of a product sell different sizes, so the conversion from buy unit to storage unit is different. Then I'll use a parent product that specifies the minimum and the different sub products with the different conversion rate. On the units \u00b6 I've been uncertain on what units use on some products. Imagine you buy a jar of peas, should you use jar or grams? or a bottle of wine should be in bottles or milliliters? The rule of thumb I've been using is: If the product is going to be used in a recipe, use whatever measure the recipe is going to use. For example, grams for the peas. If not, use whatever will cost you less management time. For example, milliliters for the wine (so I only have to update the inventory when the bottle is gone). Future ideas \u00b6 I could monitor the ratio of rotting and when a product gets below the minimum stock to optimize the units to buy above the minimum quantity so as to minimize the shopping frequency. To calculate it's use I can use the average shelf life, last purchased and last used specified in the product information TODO \u00b6 Define the userfields I've used Define the workflow for : initial upload purchase consumption cooking How to interact with humans that don't use the system but live in the same space Resources \u00b6 Homepage","title":"Introduction to Grocy"},{"location":"life_automation/grocy/#tips","text":"Add first the products with less letters, so add first Toothpaste and then Toothpaste roommate . Do the filling in iterations: Add the common producs: this can be done with the ticket of the last groceries, or manually inspecting all the elements in your home. Incrementally add the recipes that you use Add the barcodes in the products that make sense. Add the score and shop userfields for the products, so you can evaluate how much you like the product and where to buy it. If you show them in the columns, you can also filter the shopping list by shop.","title":"Tips"},{"location":"life_automation/grocy/#minimum-quantities","text":"The minimum quantity defines when does the product is going to be added to the shopping list, it must be enough so we have time to go to the shop to buy more, so it has to follow: minimum quantity = max_shop_frequency * average_consumption_rate * security_factor Where: * max_shop_frequency : is the maximum number of days between I visit the shop where I can obtain that product. If the product can be obtained in several shops we'll take the smallest number of days. * average_consumption_rate : is the average number of units consumed per day. It can be calculated by the following equation: average_consumption_rate = total_units_consumed / days_since_first_unit_bought The calculation could be improved giving more weight to the recent consumption against the overall trend. security_factor : Is an amount to add to take into account the imprecisions on the measures. A starting security_factor could be 1.2. But we won't have most of the required data when we start from scratch, therefore I've followed the next criteria: If the product is critical, I want to always have at least a spare one, so the minimum quantity will be 2. I roughly evaluate the relationship between the average_consumption_rate and the max_shop_frequency . Also, I usually have a recipient for the critical products, so I mark the product as consumed once I transfer it from the original recipient to my recipient. Therefore I always have a security factor. This also helps to reduce the management time. For example, for the fruit, instead of marking as consumed each time I eat a piece, I mark them as consumed when I move them from the fridge to a recipient I've got in the living room.","title":"Minimum quantities"},{"location":"life_automation/grocy/#parent-products","text":"Parent products let you group different kind of products under the same roof. The idea is to set the minimum quantity in the parent product and it will inherit all the quantities of it's children. I've used parent products for example to set a minimum amount of red tea, while storing the different red teas in different products. The advantage of this approach is that you have a detailed product page for each kind of product. This allows you to have different purchase - storage ratio, price evolution, set score and description for the different kinds, set different store... The disadvantage is that you have to add and maintain additional products. So if you expect that the difference between products is relevant split them, if you don't start with one product that aggregates all, like chocolate bar for all kinds of chocolate bars, and maybe in the future refactor it to a parent and child products. Another good use case is if the different brands of a product sell different sizes, so the conversion from buy unit to storage unit is different. Then I'll use a parent product that specifies the minimum and the different sub products with the different conversion rate.","title":"Parent products"},{"location":"life_automation/grocy/#on-the-units","text":"I've been uncertain on what units use on some products. Imagine you buy a jar of peas, should you use jar or grams? or a bottle of wine should be in bottles or milliliters? The rule of thumb I've been using is: If the product is going to be used in a recipe, use whatever measure the recipe is going to use. For example, grams for the peas. If not, use whatever will cost you less management time. For example, milliliters for the wine (so I only have to update the inventory when the bottle is gone).","title":"On the units"},{"location":"life_automation/grocy/#future-ideas","text":"I could monitor the ratio of rotting and when a product gets below the minimum stock to optimize the units to buy above the minimum quantity so as to minimize the shopping frequency. To calculate it's use I can use the average shelf life, last purchased and last used specified in the product information","title":"Future ideas"},{"location":"life_automation/grocy/#todo","text":"Define the userfields I've used Define the workflow for : initial upload purchase consumption cooking How to interact with humans that don't use the system but live in the same space","title":"TODO"},{"location":"life_automation/grocy/#resources","text":"Homepage","title":"Resources"},{"location":"life_automation/grocy_deploy/","text":"The deployment has been really easy thanks to the Linuxserver docker . I've used the simple-deploy-docker ansible role to create a service based on docker. The configuration is straightforward, most is done through the UI, but you can disable the Chores , Tasks , and other stuff if you don't use it in the config.php file.","title":"Grocy deployment notes"},{"location":"life_automation/life_automation/","text":"Life Automation is the act of analyzing your interactions with the world to find ways to reduce the time or willpower spent on unwanted processes. Once you've covered some minimum life requirements (health, money or happiness), time is your most valued asset. It's sad to waste it doing stuff that we need but don't increase our happiness. So the idea is to identify which are those processes and find optimizations that allows us to do them in less time or using less willpower. I've also faced the problem of having so much stuff in my mind. Having background processes increase your brain load and are a constant sink of willpower. As a result, when you really need that CPU time, your brain is tired and doesn't work to it's full performance. Automating processes, like life logging and task management, allows you to delegate those worries. Life automation can lead to habit building, which reduces even more the willpower consumption of processes, at the same time it reduces the error rate. Automating home chores \u00b6 Using grocy to maintain the house stock, shopping lists and meal plans.","title":"Introduction"},{"location":"life_automation/life_automation/#automating-home-chores","text":"Using grocy to maintain the house stock, shopping lists and meal plans.","title":"Automating home chores"},{"location":"meta/meta/","text":"In this book you'll find, in a wiki format, all the notes I made on a huge variety of topics, such as, Linux, DevSecOps, feminism, rationalism, life automation, productivity or programming. The main goal is to store all the knowledge gathered throughout my life in a way that everyone can benefit from reading it or referencing in an easy and quickly way. I will be updating this wiki quite often as I use it myself daily both to keep an account of things I know as well as things I want to know and everything in between. History \u00b6 I've tried writing blogs in the past, but it doesn't work for me. I can't stand the idea of having to save some time to sit and write a full article of something I've done. I need to document at the same time as I develop or learn. Furthermore, as I usually use incremental reading or work on several projects, I don't write one article, but improve several at the same time in a unordered way. That's why I embrace Gwerns Long Content principle . The only drawback of this format is that I won't have an interesting RSS feed. You could go through the git log but it doesn't make any sense. That's why I'm thinking of generating a monthly newsletter similar to Gwerns Newsletters or Changelog . In 2016 I started writing in text files summaries of different concepts, how to install or how to use tools. In the beginning it was plaintext, then came Markdown , then Asciidoc , I did several refactors to reorder the different articles based in different structured ways, but I always did it with myself as the only target audience. Three years, 7422 articles and almost 50 million lines later, I found Gwern's website and Nikita's wiki , which made me think that it was time to do another refactor to give my wiki a semantical structure, go beyond a simple reference making it readable and open it to the internet. And the blue book was born. Book structure \u00b6 Each directory is a topic that can include other subtopics under it related to the parent topic. As sometimes the strict hierarchical structure of the categories doesn't work, I also use tags to link articles. If this is your first time visiting this wiki, you can just start reading from the top entry down and see what sparks your interest. Content Structure \u00b6 Each topic will have a title, some description of it, usually my own thoughts and knowledge on it as well as referencing some resources or links I have liked or used that helped me either understand the topic or gain appreciation of it. The structure of each of the posts will often look roughly like this: Title Description - My thoughts on the topic. Subtopics - Various subtopics related to the main topic. Notes - My own personal notes on the matter as well as things I found interesting on the internet regarding the topic. I often give a link of where I got things from. Links - Links related to the topic. Links \u00b6 My blue book is heavily inspired in this two other second brains: Gwern's website Nikita's wiki","title":"Meta"},{"location":"meta/meta/#history","text":"I've tried writing blogs in the past, but it doesn't work for me. I can't stand the idea of having to save some time to sit and write a full article of something I've done. I need to document at the same time as I develop or learn. Furthermore, as I usually use incremental reading or work on several projects, I don't write one article, but improve several at the same time in a unordered way. That's why I embrace Gwerns Long Content principle . The only drawback of this format is that I won't have an interesting RSS feed. You could go through the git log but it doesn't make any sense. That's why I'm thinking of generating a monthly newsletter similar to Gwerns Newsletters or Changelog . In 2016 I started writing in text files summaries of different concepts, how to install or how to use tools. In the beginning it was plaintext, then came Markdown , then Asciidoc , I did several refactors to reorder the different articles based in different structured ways, but I always did it with myself as the only target audience. Three years, 7422 articles and almost 50 million lines later, I found Gwern's website and Nikita's wiki , which made me think that it was time to do another refactor to give my wiki a semantical structure, go beyond a simple reference making it readable and open it to the internet. And the blue book was born.","title":"History"},{"location":"meta/meta/#book-structure","text":"Each directory is a topic that can include other subtopics under it related to the parent topic. As sometimes the strict hierarchical structure of the categories doesn't work, I also use tags to link articles. If this is your first time visiting this wiki, you can just start reading from the top entry down and see what sparks your interest.","title":"Book structure"},{"location":"meta/meta/#content-structure","text":"Each topic will have a title, some description of it, usually my own thoughts and knowledge on it as well as referencing some resources or links I have liked or used that helped me either understand the topic or gain appreciation of it. The structure of each of the posts will often look roughly like this: Title Description - My thoughts on the topic. Subtopics - Various subtopics related to the main topic. Notes - My own personal notes on the matter as well as things I found interesting on the internet regarding the topic. I often give a link of where I got things from. Links - Links related to the topic.","title":"Content Structure"},{"location":"meta/meta/#links","text":"My blue book is heavily inspired in this two other second brains: Gwern's website Nikita's wiki","title":"Links"},{"location":"projects/beets-player/","text":"Objectives \u00b6 I want to be able to: Have a database of tracks, playlists, users to do data analysis on it. Integrate mep, mediarss, playlist_generator under the same hood. Think it so it can expand to airss. So I need \u00b6 A centralized database that allows the: Import of new files (with something like mediarss) Library management (duplicate removal, metadata addition), playlist generation, metadata data analysis) Architecture \u00b6 Download \u00b6 Prior to download it will ensure if the item is already in the database: Check hte youtube-dl archive ? Check the database: Download url Musicbrainz id (search url, search terms) A python script downloads metadata and content with community maintained tools (youtube-dl) Metadata and content are added to the database: Use beets? Directly attack the sqlite Playlist generation \u00b6 Use beets library if you can If not, construct sqlalchemy structure over the sqlite database. Phases \u00b6 [x] Phase 0: See if beets works for me \u00b6 Install beets with acousticid support. Import a small subset of files. Investigate the sqlite structure. Investigate the beets plugins (See if they add custom metadata to the ddbb) Decide if it will suit my case: Add information outside beets schema Can \"automate\" the process of import [ ] Phase 1: Import all media in a common language: 2e915ad2-832a-4309-bb93-64448c706096 \u00b6 Import all library into beets [ ] Phase 2: Adapt the way you reproduce media so it populates the new \u00b6 system: 3ef30f45-94f0-4e20-a78a-ccdd5a252d92 If you want a script to play with python + mpd check the stats.py on this directory. Adapt mep to use beets. Modify mpdstats to instead of storing only the play_count and the skip_counts, it stores: https://github.com/beetbox/beets/blob/master/beetsplug/mpdstats.py https://beets.readthedocs.io/en/stable/plugins/mpdstats.html A json of a list of skip dates A json of a list of reproduction dates A json of a list of dictionaries of date and rating For that we will need to: * Decide the algorithm to introduce the ratings score. * Modify how it stores the information * Add in the control loop the checking of the ratings channel. Something like: mpc subscribe ratings , mpc sendmessage ratings 5 * Use the subscribe: MPDStats [source,python] ---- (Pdb) client.subscribe('ratings') (Pdb) mess = client.readmessages() (Pdb) mess [{'channel': 'ratings', 'message': '2'}] ---- User [source,bash] ---- mpc sendmessage ratings 2 ---- Docs: Idle example: https://github.com/Mic92/python-mpd2/blob/master/examples/idle.py How to use idle (search for send_idle ): https://python-mpd2.readthedocs.io/en/latest/topics/getting-started.html# https://python-mpd2.readthedocs.io/en/latest/topics/commands.html Other resources: https://pypi.org/project/python-mpd2/ https://github.com/Mic92/python-mpd2/blob/master/examples/stats.py https://github.com/Mic92/python-mpd2/blob/master/examples/stickers.py https://github.com/vincent-petithory/mpdfav Smart playlists https://beets.readthedocs.io/en/v1.3.17/plugins/smartplaylist.html?highlight=playlist Stats: [ ] Phase 3: Integrate mep.history data into the new system \u00b6 Transform mep.history into files of beets Use the acoustid fingerprint of the mep.history found files to locate the track id in the beets library. Use the following library to make a migration script https://github.com/beetbox/pyacoustid , or fpcalc in a bash script and litecli litecli \\ ~/.config/beets/library.db \\ -e \"\\ select track,artist,title \\ from items \\ where acoustid_fingerprint \\ LIKE \\\"$(\\ fpcalc -plain The.Righteous.Brothers_-_Unchained.Melody.m4a | \\ cut -c1-15)%\\\"\" | \\ tail -n1 | \\ egrep -o \"^[0-9]+\" * [ ] Import the reproduction count, skip count and rating from mep to beets: To import the reproduction count, skip count and rating see the links below to decide if you introduce it into the mpd database, the beets database or an alternative database. Import the eighttracks metadata Import the eight tracks files (so as no to loose the user/playlist/track metadata) Phase 4: import new content \u00b6 Use beets-ydl plugin, you can download and import later! https://github.com/vmassuchetto/beets-ydl Soundcloud files don't get the metadata from the youtube-dl metadata, but yes from picard. Bandcamp it fails Youtube works but it doesn't load the metadata from youtube either. You can also use bandcamp plugin https://github.com/unrblt/beets-bandcamp We need to store the information of from what source does the item proceed from Decide if use additional beets plugins More tags https://github.com/YetAnotherNerd/whatlastgenre/tree/master/plugin/beets popularity https://github.com/abba23/beets-popularity Replaygain Musicbrainz update database To contribute to acousticid (easy) https://beets.readthedocs.io/en/v1.4.9/plugins/chroma.html Config api key: http://acoustid.org/api-key beets submit To contribute to musicbrainz (more difficult) https://beets.readthedocs.io/en/v1.4.9/plugins/mbsubmit.html It needs revisions, Phase 5: Improve library \u00b6 Remove duplicates based on acousticid Get notifications on new albums https://github.com/nolsto/beets-follow integrate with lidarr Regroup tracks without album into albums Create an Artist entity and extract the metadata from musicbrainz","title":"Objectives"},{"location":"projects/beets-player/#objectives","text":"I want to be able to: Have a database of tracks, playlists, users to do data analysis on it. Integrate mep, mediarss, playlist_generator under the same hood. Think it so it can expand to airss.","title":"Objectives"},{"location":"projects/beets-player/#so-i-need","text":"A centralized database that allows the: Import of new files (with something like mediarss) Library management (duplicate removal, metadata addition), playlist generation, metadata data analysis)","title":"So I need"},{"location":"projects/beets-player/#architecture","text":"","title":"Architecture"},{"location":"projects/beets-player/#download","text":"Prior to download it will ensure if the item is already in the database: Check hte youtube-dl archive ? Check the database: Download url Musicbrainz id (search url, search terms) A python script downloads metadata and content with community maintained tools (youtube-dl) Metadata and content are added to the database: Use beets? Directly attack the sqlite","title":"Download"},{"location":"projects/beets-player/#playlist-generation","text":"Use beets library if you can If not, construct sqlalchemy structure over the sqlite database.","title":"Playlist generation"},{"location":"projects/beets-player/#phases","text":"","title":"Phases"},{"location":"projects/beets-player/#x-phase-0-see-if-beets-works-for-me","text":"Install beets with acousticid support. Import a small subset of files. Investigate the sqlite structure. Investigate the beets plugins (See if they add custom metadata to the ddbb) Decide if it will suit my case: Add information outside beets schema Can \"automate\" the process of import","title":"[x] Phase 0: See if beets works for me"},{"location":"projects/beets-player/#phase-1-import-all-media-in-a-common-language-2e915ad2-832a-4309-bb93-64448c706096","text":"Import all library into beets","title":"[ ] Phase 1: Import all media in a common language: 2e915ad2-832a-4309-bb93-64448c706096"},{"location":"projects/beets-player/#phase-2-adapt-the-way-you-reproduce-media-so-it-populates-the-new","text":"system: 3ef30f45-94f0-4e20-a78a-ccdd5a252d92 If you want a script to play with python + mpd check the stats.py on this directory. Adapt mep to use beets. Modify mpdstats to instead of storing only the play_count and the skip_counts, it stores: https://github.com/beetbox/beets/blob/master/beetsplug/mpdstats.py https://beets.readthedocs.io/en/stable/plugins/mpdstats.html A json of a list of skip dates A json of a list of reproduction dates A json of a list of dictionaries of date and rating For that we will need to: * Decide the algorithm to introduce the ratings score. * Modify how it stores the information * Add in the control loop the checking of the ratings channel. Something like: mpc subscribe ratings , mpc sendmessage ratings 5 * Use the subscribe: MPDStats [source,python] ---- (Pdb) client.subscribe('ratings') (Pdb) mess = client.readmessages() (Pdb) mess [{'channel': 'ratings', 'message': '2'}] ---- User [source,bash] ---- mpc sendmessage ratings 2 ---- Docs: Idle example: https://github.com/Mic92/python-mpd2/blob/master/examples/idle.py How to use idle (search for send_idle ): https://python-mpd2.readthedocs.io/en/latest/topics/getting-started.html# https://python-mpd2.readthedocs.io/en/latest/topics/commands.html Other resources: https://pypi.org/project/python-mpd2/ https://github.com/Mic92/python-mpd2/blob/master/examples/stats.py https://github.com/Mic92/python-mpd2/blob/master/examples/stickers.py https://github.com/vincent-petithory/mpdfav Smart playlists https://beets.readthedocs.io/en/v1.3.17/plugins/smartplaylist.html?highlight=playlist Stats:","title":"[ ] Phase 2: Adapt the way you reproduce media so it populates the new"},{"location":"projects/beets-player/#phase-3-integrate-mephistory-data-into-the-new-system","text":"Transform mep.history into files of beets Use the acoustid fingerprint of the mep.history found files to locate the track id in the beets library. Use the following library to make a migration script https://github.com/beetbox/pyacoustid , or fpcalc in a bash script and litecli litecli \\ ~/.config/beets/library.db \\ -e \"\\ select track,artist,title \\ from items \\ where acoustid_fingerprint \\ LIKE \\\"$(\\ fpcalc -plain The.Righteous.Brothers_-_Unchained.Melody.m4a | \\ cut -c1-15)%\\\"\" | \\ tail -n1 | \\ egrep -o \"^[0-9]+\" * [ ] Import the reproduction count, skip count and rating from mep to beets: To import the reproduction count, skip count and rating see the links below to decide if you introduce it into the mpd database, the beets database or an alternative database. Import the eighttracks metadata Import the eight tracks files (so as no to loose the user/playlist/track metadata)","title":"[ ] Phase 3: Integrate mep.history data into the new system"},{"location":"projects/beets-player/#phase-4-import-new-content","text":"Use beets-ydl plugin, you can download and import later! https://github.com/vmassuchetto/beets-ydl Soundcloud files don't get the metadata from the youtube-dl metadata, but yes from picard. Bandcamp it fails Youtube works but it doesn't load the metadata from youtube either. You can also use bandcamp plugin https://github.com/unrblt/beets-bandcamp We need to store the information of from what source does the item proceed from Decide if use additional beets plugins More tags https://github.com/YetAnotherNerd/whatlastgenre/tree/master/plugin/beets popularity https://github.com/abba23/beets-popularity Replaygain Musicbrainz update database To contribute to acousticid (easy) https://beets.readthedocs.io/en/v1.4.9/plugins/chroma.html Config api key: http://acoustid.org/api-key beets submit To contribute to musicbrainz (more difficult) https://beets.readthedocs.io/en/v1.4.9/plugins/mbsubmit.html It needs revisions,","title":"Phase 4: import new content"},{"location":"projects/beets-player/#phase-5-improve-library","text":"Remove duplicates based on acousticid Get notifications on new albums https://github.com/nolsto/beets-follow integrate with lidarr Regroup tracks without album into albums Create an Artist entity and extract the metadata from musicbrainz","title":"Phase 5: Improve library"},{"location":"projects/projects/","text":"Doing \u00b6 Product inventory \u00b6 grocy Another task management command line tool \u00b6 Pydo Blue book \u00b6 I'm refactoring all the knowledge gathered in the past in my cheat sheet repository into the blue book. This means migrating 7422 articles, almost 50 million lines, to the new structure. It's going to be a slow and painful process \u1559(\u21c0\u2038\u21bc\u2036)\u1557. Do a monthly digest of my data. Add link icons like Gwern's . Add an anonymous feedback link like the one at the bottom of Gwern pages . DevSecOps infrastructure inventory tool development \u00b6 Clinv Media indexation \u00b6 Beets indexation Todo \u00b6 Backlog \u00b6 Use clinv to have an inventory of my personal infrastructure \u00b6 Knowledge graph \u00b6 Create a graph of my knowledge, rdf triplestore knowledge graph https://grakn.ai/grakn-core Learn-anything.org Self hosted search engine \u00b6 Check my wishlist for more information. Done \u00b6 Deprecated \u00b6","title":"Projects"},{"location":"projects/projects/#doing","text":"","title":"Doing"},{"location":"projects/projects/#product-inventory","text":"grocy","title":"Product inventory"},{"location":"projects/projects/#another-task-management-command-line-tool","text":"Pydo","title":"Another task management command line tool"},{"location":"projects/projects/#blue-book","text":"I'm refactoring all the knowledge gathered in the past in my cheat sheet repository into the blue book. This means migrating 7422 articles, almost 50 million lines, to the new structure. It's going to be a slow and painful process \u1559(\u21c0\u2038\u21bc\u2036)\u1557. Do a monthly digest of my data. Add link icons like Gwern's . Add an anonymous feedback link like the one at the bottom of Gwern pages .","title":"Blue book"},{"location":"projects/projects/#devsecops-infrastructure-inventory-tool-development","text":"Clinv","title":"DevSecOps infrastructure inventory tool development"},{"location":"projects/projects/#media-indexation","text":"Beets indexation","title":"Media indexation"},{"location":"projects/projects/#todo","text":"","title":"Todo"},{"location":"projects/projects/#backlog","text":"","title":"Backlog"},{"location":"projects/projects/#use-clinv-to-have-an-inventory-of-my-personal-infrastructure","text":"","title":"Use clinv to have an inventory of my personal infrastructure"},{"location":"projects/projects/#knowledge-graph","text":"Create a graph of my knowledge, rdf triplestore knowledge graph https://grakn.ai/grakn-core Learn-anything.org","title":"Knowledge graph"},{"location":"projects/projects/#self-hosted-search-engine","text":"Check my wishlist for more information.","title":"Self hosted search engine"},{"location":"projects/projects/#done","text":"","title":"Done"},{"location":"projects/projects/#deprecated","text":"","title":"Deprecated"},{"location":"reading/incremental_reading/","text":"TBD","title":"Incremental reading"},{"location":"self_hosted/dynamicdns/","text":"Dynamic DNS (DDNS) is a method of automatically updating a name server in the Domain Name Server (DNS), often in real time, with the active DDNS configuration of its configured hostnames, addresses or other information. There are different DDNS providers, I use Duckdns as it is easy to setup and the Linuxserver people have a docker that makes it work .","title":"Dynamic DNS notes"},{"location":"sharing/everything_i_know/","text":"TBD References: https://wiki.nikitavoloboev.xyz/sharing/everything-i-know","title":"Everything I know"},{"location":"writting/build_your_own_wiki/","text":"About page \u00b6 Nikita Gwern Unconnected thoughts \u00b6 Define how to add links to newly created documents in the whole wiki. Deploy fast, deploy early Grab the ideas of todo Define a meaningful tag policy. https://www.gwern.net/About#confidence-tags https://www.gwern.net/About#importance-tags Decide a meaningful nav policy. How to decide when to create a new section, Add to the index nav once it's finished, not before Use the tbd tag to mark the articles that need attention. Avoid file hardcoding, use mkdocs autolinks plugin Use underscores for the file names, so the autocompletion feature of your editor works. Add a link to the github pages site both in the git repository description and in the README. Create a local server to visualize the documentation \u00b6 mkdocs serve == Debian [source,bash] \u00b6 pip install mkdocs mkdocs-gitbook pymdown-extensions mkdocs-git-revision-date-localized-plugin mkdocs new blue-book === Use of custom domains https://www.mkdocs.org/user-guide/deploying-your-docs/#custom-domains === Custom theme The GitBook Theme can be installed from this repository . === Display versions https://pypi.org/project/mkversion/ === Notify of new features I wasn't able to make it work * https://github.com/obuya/mkdocs-new-features-notifier === Tags https://github.com/jldiaz/mkdocs-plugin-tags === Auto-links https://github.com/midnightprioriem/mkdocs-autolinks-plugin/ === Email protect I wasn't able to install it https://github.com/rkoe/mkdocs-emailprotect Material theme guide Material guide to enable code blocks highlight : From what I've seen in some github issue, you should not use it with codehilite, although you still have their syntax. User Guide: Writting your docs Example of markdown writting with Material theme and it's source Add revision date Add test for rotten links Adds tooltips to preview the content of page links using tooltipster . I only managed to make it work with internal links and in an ugly way... So I'm not using. Plugin to generate Python Docstrings Add Mermaid graphs Add Plantuml graphs Links \u00b6 Nikita's wiki workflow","title":"Build your own wiki"},{"location":"writting/build_your_own_wiki/#about-page","text":"Nikita Gwern","title":"About page"},{"location":"writting/build_your_own_wiki/#unconnected-thoughts","text":"Define how to add links to newly created documents in the whole wiki. Deploy fast, deploy early Grab the ideas of todo Define a meaningful tag policy. https://www.gwern.net/About#confidence-tags https://www.gwern.net/About#importance-tags Decide a meaningful nav policy. How to decide when to create a new section, Add to the index nav once it's finished, not before Use the tbd tag to mark the articles that need attention. Avoid file hardcoding, use mkdocs autolinks plugin Use underscores for the file names, so the autocompletion feature of your editor works. Add a link to the github pages site both in the git repository description and in the README.","title":"Unconnected thoughts"},{"location":"writting/build_your_own_wiki/#create-a-local-server-to-visualize-the-documentation","text":"mkdocs serve == Debian","title":"Create a local server to visualize the documentation"},{"location":"writting/build_your_own_wiki/#sourcebash","text":"pip install mkdocs mkdocs-gitbook pymdown-extensions mkdocs-git-revision-date-localized-plugin mkdocs new blue-book === Use of custom domains https://www.mkdocs.org/user-guide/deploying-your-docs/#custom-domains === Custom theme The GitBook Theme can be installed from this repository . === Display versions https://pypi.org/project/mkversion/ === Notify of new features I wasn't able to make it work * https://github.com/obuya/mkdocs-new-features-notifier === Tags https://github.com/jldiaz/mkdocs-plugin-tags === Auto-links https://github.com/midnightprioriem/mkdocs-autolinks-plugin/ === Email protect I wasn't able to install it https://github.com/rkoe/mkdocs-emailprotect Material theme guide Material guide to enable code blocks highlight : From what I've seen in some github issue, you should not use it with codehilite, although you still have their syntax. User Guide: Writting your docs Example of markdown writting with Material theme and it's source Add revision date Add test for rotten links Adds tooltips to preview the content of page links using tooltipster . I only managed to make it work with internal links and in an ugly way... So I'm not using. Plugin to generate Python Docstrings Add Mermaid graphs Add Plantuml graphs","title":"[source,bash]"},{"location":"writting/build_your_own_wiki/#links","text":"Nikita's wiki workflow","title":"Links"},{"location":"writting/writting/","text":"TBD Reference: https://wiki.nikitavoloboev.xyz/writing https://www.gwern.net/About#writing-checklist Unconnected thoughts \u00b6 Avoid the use of here , use descriptive link text.","title":"Writting"},{"location":"writting/writting/#unconnected-thoughts","text":"Avoid the use of here , use descriptive link text.","title":"Unconnected thoughts"},{"location":"tags.html","text":"Contents grouped by tag \u00b6 Life Automation \u00b6 Introduction to Grocy Life Automation","title":"Tags"},{"location":"tags.html#contents-grouped-by-tag","text":"","title":"Contents grouped by tag"},{"location":"tags.html#life-automation","text":"Introduction to Grocy Life Automation","title":"Life Automation"}]}